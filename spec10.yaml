openapi: 3.0.0
info:
  title: Kontakt.io Management API
  x-logo:
    url: https://kontakt.io/wp-content/themes/kontakt/dist/img/site-header/logo.svg
    backgroundColor: "#FFFFFF"
  version: '10'
  description: |
    This API provides direct access to all resources available on Kontakt.io Management platform. It allows to implement beacon administration functionality into 3rd party solutions without the need to build all underlying logic from the ground up.
    
    ### Quick start
    In order to interact with this API, clients need to authenticate themselves using their API Keys that are available in Kontakt.io Web Panel. Detaile instructions for obtaining an API Key are available in this support article: [How do I find my Server API Key?](https://support.kontakt.io/hc/en-gb/articles/201628731)
    
    The API Key needs to be provided in the `Api-Key` header in each API call.
    
    Additionally, API call needs to specify the `Accept` with the API version you want to use, e.g. `application/vnd.com.kontakt+json;version=10`
    
    For more information please refer to our [API Guides](/backend/management/overview/).
  contact:
    name: Support
    url: 'https://support.kontakt.io'
    email: support@kontakt.io
  termsOfService: 'https://kontakt.io/terms-of-service'
externalDocs:
  url: https://developer.kontakt.io
servers:
  - url: 'https://api.kontakt.io'
security:
  - api_key: []
tags:
  - name: Activity
    description: |
      Activities perform some actions when conditions defined in a Trigger, that they are assigned to, are fulfilled.
      
      At the moment Activities perform only HTTP requests.
  - name: Command
    description: Commands are a special type of Configs used for initiating some management tasks, e.g. entering bootloader mode
  - name: Config
    description: Pending configs represent new values for beacon settings that should be applied to actual devices via e.g. Kontakt.io Administration Apps. Creating a new config does not automatically change anything on a real beacon.
  - name: Device
    description: The Device resource represents Kontakt.io devices assigned to a particular Kontakt.io Panel account, as well as devices shared with that account from different accounts.
  - name: Device (3rd party)
    description: |
      These endpoinst provide a way to integrate 3rd party Bluetooth-enabled scanning devices into Kontakt.io platform. As of Summer 2018, Kontakt.io is working with manufacturers of enterprise-level networking devices, like Cassia, Ruckus and Meraki, to seamlessly incorporate data collected by their routers and/or WiFi access points into Kontakt.io Data Streams, and to improve Infrastructure Management capabilities.
      
      Users wanting to take advantage of this feature, first need to provide proper athentication and integrate Kontakt.io Panel account with a 3rd party vendor. Only after that, devices from that vendor can be added into Kontakt.io platform.
      
      At any given moment a Company can have **only one** integration per 3rd party Vendor, i.e. you can have **one** Cassia *and* **one** Meraki integartion, but you can't have e.g. two Meraki integrations.
  - name: Eddystone
    description: Helper resources for working with Eddystone beacons
  - name: Firmware
    description: Firmware resources
  - name: GDPR
    description: General Data Protection Regulation compliance resources
  - name: Manager
    description: Managers represent user accounts that can manage Kontakt.io Devices. Everyone can freely create an account on [Kontakt.io Web Panel](https://panel.kontakt.io) and then use it to work with this API.
  - name: Monitoring
    description: |
      Beacon Health Monitoring provides email notifications for low battery levels on Kontakt.io beacons. Data for this monitoring can be provide by Kontakt.io Gateways GW16-2, Kontakt.io Administration Apps and any 3rd pary apps that use Kontakt.io Mobile SDKs.
      
      By default all beacons have two different types of Alert set up: a `WARNING` when the battery drops below 20% and an `ERROR` when it goes further down to below 10%.
  - name: Namespaces
    description: List of Eddystone UID Namespaces used on beacons belonging to a Manager
  - name: Order
    description: An Order represents all devices that have been purchased in Kontakt.io Web Store in a single transaction. Before these devices can be used with Kontakt.io platform, they need to be added to Kontakt.io Manager Account.
  - name: Proximities
    description: List of iBeacon Proximity UUIDs used on beacons belonging to a Manager
  - name: Trigger
    description: |
      Triggers are sets of conditions, that when met will cause an Activity to be performed.
      
      Triggers are executed by either Kontakt.io Gateways GW16-2 or Kontakt.io Cloud. It means that a condition check can happen either locally, on the device that is actually doing scans, or sent to a backend for processing. This makes a difference e.g. when a resource that should be notified via an Activity is located in a local network, not accesible from the Internet.
      
      When a Trigger is specified via either iBeacon or Eddystone UID attributes, after it's fired for the first time e.g. when a beacon with a specified Proximity UUID was detected, it won't be set off by other beacons with the same Proximity UUID unless Kontakt.io Cloud registers there are no beacons with given Proximity UUID in range for more than the Trigger's `throttle` period.
  - name: Venue
    description: |
      Venues help with organising beacons into groups. They may represent physical locations, but not necessarily.
      
      Currently in the Kontakt.io Web Panel Venues are called *Locations*, but in order to provide backward compatibility, API still uses the original name.
paths:
  /activity:
    get:
      tags:
        - Activity
      summary: Get Activities
      description: Return either all existing Activities, or only those specified in the `activityId` and/or filtering query
      parameters:
        - name: activityId
          in: query
          description: List of IDs of Activities that should be returned
          required: false
          schema:
            type: array
            items:
              type: string
        - $ref: '#/components/parameters/Query'
        - $ref: '#/components/parameters/MaxResult'
        - $ref: '#/components/parameters/QueryType'
      x-code-samples:
        - lang: cURL
          source: "curl \"https://api.kontakt.io/activity?q=name%3D%3DTest1\"\n     -H 'Api-Key: yourSuperSecretAPIKey'\n     -H 'Content-Type: application/x-www-form-urlencoded; charset=utf-8'\n     -H 'Accept: application/vnd.com.kontakt+json;version=10'"
        - lang: HTTP
          source: "GET /activity?q=name%3D%3Djhkvkjhvkjbv HTTP/1.1\nAccept: application/vnd.com.kontakt+json;version=10\nApi-Key: yourSuperSecretAPIKey\nContent-Type: application/x-www-form-urlencoded; charset=utf-8\nHost: api.kontakt.io\nConnection: close\nUser-Agent: Paw/3.1.4 (Macintosh; OS X/10.13.2) GCDHTTPRequest"
      responses:
        '200':
          description: OK
          content:
            'application/vnd.com.kontakt+json;version=10':
              schema:
                type: object
                properties:
                  activities:
                    type: array
                    items:
                      $ref: '#/components/schemas/Activity'
                  searchMeta:
                    $ref: '#/components/schemas/SearchMeta'
  /activity/create:
    post:
      tags:
        - Activity
      summary: Create an Activity
      description: Create a new Activity
      requestBody:
        content:
          'application/x-www-form-urlencoded':
            schema:
              $ref: '#/components/schemas/NewUpdatedActivity'
      x-code-samples:
        - lang: cURL
          source: "curl -X \"POST\" \"https://api.kontakt.io/activity/create\"\n     -H 'Api-Key: yourSuperSecretAPIKey'\n     -H 'Content-Type: application/x-www-form-urlencoded; charset=utf-8'\n     -H 'Accept: application/vnd.com.kontakt+json;version=10'\n     --data-urlencode \"context.httpMethod=POST\"\n     --data-urlencode \"context.params.aaaaaa=xxxxxxxxxxxx\"\n     --data-urlencode \"context.headers.content-type=application/json\"\n     --data-urlencode \"name=Test1\"\n     --data-urlencode \"type=SEND_HTTP_REQUEST\"\n     --data-urlencode \"context.url=https://posttestserver.com/post.php\""
        - lang: HTTP
          source: "POST /activity/create HTTP/1.1\nAccept: application/vnd.com.kontakt+json;version=10\nApi-Key: yourSuperSecretAPIKey\nContent-Type: application/x-www-form-urlencoded; charset=utf-8\nHost: api.kontakt.io\nConnection: close\nUser-Agent: Paw/3.1.4 (Macintosh; OS X/10.13.2) GCDHTTPRequest\nContent-Length: 196\n\nname=Test1&type=SEND_HTTP_REQUEST&context.url=https%3A%2F%2Fposttestserver.com%2Fpost.php&context.httpMethod=POST&context.headers.content-type=application%2Fjson&context.params.aaaaaa=xxxxxxxxxxxx"
      responses:
        '201':
          description: Created
          content:
            'application/vnd.com.kontakt+json;version=10':
              schema:
                $ref: '#/components/schemas/Activity'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
          content: 
            'application/json':
              schema:
                $ref: '#/components/schemas/ApiError'
        '422':
          description: Unprocessable Entity
          content: 
            'application/json':
              schema:
                $ref: '#/components/schemas/ApiError'
  /activity/update:
    post:
      tags:
        - Activity
      summary: Update an Activity
      description: Update a single existing Activity with new parameters
      requestBody:
        content:
          'application/x-www-form-urlencoded':
            schema:
              allOf:
                - type: object
                  properties:
                    activityId:
                      type: string
                      format: uuid
                      description: Activity ID
                - $ref: '#/components/schemas/NewUpdatedActivity'
              required:
                - activityId
      x-code-samples:
        - lang: cURL
          source: "curl -X \"POST\" \"https://api.kontakt.io/activity/update\"\n     -H 'Api-Key: yourSuperSecretAPIKey'\n     -H 'Content-Type: application/x-www-form-urlencoded; charset=utf-8'\n     -H 'Accept: application/vnd.com.kontakt+json;version=10'\n     --data-urlencode \"name=Test2\"\n     --data-urlencode \"activityId=1ed593d1-69f3-4808-82ed-a1631539e6f6\"\n     --data-urlencode \"triggerId=BF533C32-36E2-480B-B23D-673D065CE097\""
        - lang: HTTP
          source: "POST /activity/update HTTP/1.1\nAccept: application/vnd.com.kontakt+json;version=10\nApi-Key: yourSuperSecretAPIKey\nContent-Type: application/x-www-form-urlencoded; charset=utf-8\nHost: api.kontakt.io\nConnection: close\nUser-Agent: Paw/3.1.4 (Macintosh; OS X/10.13.2) GCDHTTPRequest\nContent-Length: 105\n\nactivityId=1ed593d1-69f3-4808-82ed-a1631539e6f6&name=Test2&triggerId=BF533C32-36E2-480B-B23D-673D065CE097"
      responses:
        '200':
          description: OK
          content:
            'application/vnd.com.kontakt+json; version=10':
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Success message
                    example: 'Update successful.'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
          content: 
            'application/json':
              schema:
                $ref: '#/components/schemas/ApiError'
        '422':
          description: Unprocessable Entity
          content: 
            'application/json':
              schema:
                $ref: '#/components/schemas/ApiError'
  /activity/delete:
    post:
      tags:
        - Activity
      summary: Delete an Activity
      description: Delete a single Activity
      requestBody:
        content:
          'application/x-www-form-urlencoded':
            schema:
              properties:
                activityId:
                  description: ID of a single Activity that should be deleted
                  type: string
              required:
                - activityId
      x-code-samples:
        - lang: cURL
          source: "curl -X \"POST\" \"https://api.kontakt.io/activity/delete\"\n     -H 'Api-Key: yourSuperSecretAPIKey'\n     -H 'Content-Type: application/x-www-form-urlencoded; charset=utf-8'\n     -H 'Accept: application/vnd.com.kontakt+json;version=10'\n     --data-urlencode \"activityId=73428e4d-1eba-4034-b6b8-d5d88d7b6fd4\""
        - lang: HTTP
          source: "POST /activity/delete HTTP/1.1\nAccept: application/vnd.com.kontakt+json;version=10\nApi-Key: yourSuperSecretAPIKey\nContent-Type: application/x-www-form-urlencoded; charset=utf-8\nHost: api.kontakt.io\nConnection: close\nUser-Agent: Paw/3.1.4 (Macintosh; OS X/10.13.2) GCDHTTPRequest\nContent-Length: 47\n\nactivityId=73428e4d-1eba-4034-b6b8-d5d88d7b6fd4"
      responses:
        '200':
          description: OK
          content:
            'application/vnd.com.kontakt+json; version=10':
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Success message
                    example: 'Delete successful.'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ApiError'
        '422':
          description: Unprocessable Entity
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ApiError'
  /command/encrypt:
    get:
      tags:
        - Command
      summary: Create Encrypted Commands
      description: Returns a list of Base64-encoded configs with encrypted commands for each of devices specified in a request
      parameters:
        - name: uniqueId
          in: query
          description: List of Unique IDs
          required: true
          schema:
            type: array
            items:
              type: string
              description: Unique ID
        - name: command
          in: query
          required: true
          description: |
            A Command that should be encrypted in configs for each of devices specified in a request
            
            * `RESET` - Reboots the device
            * `NONCONNECTABLE` - Connectable BLE packets will be nonconnectable until a next reboot
            * `BOOTLOADER` - Device enters a firmware upgrade mode
            * `SLEEP` - Device enters a sleep mode (stops broadcasting all packets)
            * `BLINK_10S` - Primary LED blinks for 10 seconds or LED blinks with the primary colour for 10 seconds
            * `BLINK_30S` - Primary LED blinks for 30 seconds or LED blinks with the primary colour for 30 seconds
            * `BLINK2_10S` - Secondary LED blinks for 10 seconds or LED blinks with the secondary colour for 10 seconds
            * `BLINK2_30S` - Secondary LED blinks for 30 seconds or LED blinks with the secondary colour for 30 seconds
            
            Please keep in mind that not all devices can support all of these commands. Refer to device specification to learn more.
          schema:
            type: string
            enum:
              - RESET
              - NONCONNECTBLE
              - BOOTLOADER
              - SLEEP
              - BLINK_10S
              - BLINK_30S
              - BLINK2_10S
              - BLINK2_30S
      x-code-samples:
        - lang: cURL
          source: "curl \"https://api.kontakt.io/command/encrypt?uniqueId=6nYd,pf86&command=NONCONNECTABLE\"\n     -H 'Api-Key: yourSuperSecretAPIKey'\n     -H 'Accept: application/vnd.com.kontakt+json;version=10'"
        - lang: HTTP
          source: "GET /command/encrypt?uniqueId=6nYd,pf86&command=NONCONNECTABLE HTTP/1.1\nAccept: application/vnd.com.kontakt+json;version=10\nApi-Key: yourSuperSecretAPIKey\nHost: api.kontakt.io\nConnection: close\nUser-Agent: Paw/3.1.4 (Macintosh; OS X/10.13.2) GCDHTTPRequest"
      responses:
        '200':
          description: OK
          content:
            'application/vnd.com.kontakt+json;version=10':
              schema:
                type: object
                properties:
                  commands:
                    type: array
                    items:
                      $ref: '#/components/schemas/ConfigEncrypted'
                  searchMeta:
                    $ref: '#/components/schemas/SearchMeta'
        '404':
          description: Not Found
          content: 
            'application/json':
              schema:
                $ref: '#/components/schemas/ApiError'
        '422':
          description: Unprocessable Entity
          content: 
            'application/json':
              schema:
                $ref: '#/components/schemas/ApiError'
  /config:
    get:
      tags:
        - Config
      summary: Get Configs
      description: Returns all pending configurations for specified Devices or device type. If no query parameters are provided, this endpoint returns all pending configurations that can be applied to Devices belonging to a Manager.
      parameters:
        - name: uniqueId
          in: query
          description: List of Unique IDs of Devices which pending configurations should be returned
          required: false
          schema:
            type: array
            items:
              type: string
        - name: deviceType
          in: query
          description: Device type. Only pending configurations for devices of this type will be returned
          required: false
          schema:
            type: string
            enum:
              - BEACON
              - GATEWAY
        - name: profile
          in: query
          description: Device profile. Only pending configurations for devices with a given profile will be returned.
          required: false
          schema:
            type: string
            enum:
              - IBEACON
              - EDDYSTONE
        - $ref: '#/components/parameters/MaxResult'
        - $ref: '#/components/parameters/QueryType'
      x-code-samples:
        - lang: cURL
          source: "curl \"https://api.kontakt.io/config\"\n     -H 'Api-Key: yourSuperSecretAPIKey'\n     -H 'Accept: application/vnd.com.kontakt+json;version=10'"
        - lang: HTTP
          source: "GET /config HTTP/1.1\nAccept: application/vnd.com.kontakt+json;version=10\nApi-Key: yourSuperSecretAPIKey\nHost: api.kontakt.io\nConnection: close\nUser-Agent: Paw/3.1.4 (Macintosh; OS X/10.13.3) GCDHTTPRequest"
      responses:
        '200':
          description: OK
          content:
            'application/vnd.com.kontakt+json;version=10':
              schema:
                type: object
                properties:
                  configs:
                    type: array
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/Config'
                        - $ref: '#/components/schemas/ConfigGateway'
                  searchMeta:
                    $ref: '#/components/schemas/SearchMeta'
  /config/create:
    post:
      tags:
        - Config
      summary: Create a Config
      description: |
        Create a new configuration for a Device.
        
        Please be aware that doing this alone *will not make any changes on actual, physical beacons*, unless these beacons have active Infrastructure Management or Data Streams subscriptions and are in range of a Kontakt.io Gateway GW16-2. Otherwise, this config has to encrypted, downloaded and applied to them via Bluetooth connection. This is usually done via Kontakt.io Administration App or a 3rd party custom app that implements one of Kontakt.io mobile SDKs.

        Not all devices accept all configuration parameters available in the Request Body. Please check the Response Schema for a given type of a beacon/tag to see what parameters are availble for this particular beacon type.

        The request, apart from the required fields, needs to specify only the parameters you want to change. Others should be ommited.
      requestBody:
        content:
          'application/x-www-form-urlencoded':
            schema:
              oneOf:
                - $ref: '#/components/schemas/NewBeaconConfig'
                - $ref: '#/components/schemas/NewGatewayConfig'
              required:
                - uniqueId
                - deviceType
      x-code-samples:
        - lang: cURL
          source: "curl -X \"POST\" \"https://api.kontakt.io/config/create\"\n     -H 'Api-Key: yourSuperSecretAPIKey'\n     -H 'Content-Type: application/x-www-form-urlencoded; charset=utf-8'\n     -H 'Accept: application/vnd.com.kontakt+json;version=10'\n     --data-urlencode \"minor=55\"\n     --data-urlencode \"powerSaving.features=\"\n     --data-urlencode \"accelerometer.doubleTap.detectionFlags=X_AXIS,Y_AXIS,Z_AXIS\"\n     --data-urlencode \"uniqueId=vbsU\"\n     --data-urlencode \"deviceType=BEACON\""
        - lang: HTTP
          source: "POST /config/create HTTP/1.1\nAccept: application/vnd.com.kontakt+json;version=10\nApi-Key: yourSuperSecretAPIKey\nContent-Type: application/x-www-form-urlencoded; charset=utf-8\nHost: api.kontakt.io\nConnection: close\nUser-Agent: Paw/3.1.4 (Macintosh; OS X/10.13.2) GCDHTTPRequest\nContent-Length: 126\n\nuniqueId=vbsU&deviceType=BEACON&powerSaving.features=&minor=55&accelerometer.doubleTap.detectionFlags=X_AXIS%2CY_AXIS%2CZ_AXIS"
      responses:
        '201':
          description: Created
          content:
            'application/vnd.com.kontakt+json;version=10':
              schema:
                type: array
                items:
                  oneOf:
                    - $ref: '#/components/schemas/Config'
                    - $ref: '#/components/schemas/ConfigGateway'
        '401':
          description: Unauthorized
        '409':
          description: Conflict
          content: 
            'application/json':
              schema:
                $ref: '#/components/schemas/ApiError'
        '422':
          description: Unprocessable Entity
          content: 
            'application/json':
              schema:
                $ref: '#/components/schemas/ApiError'
  /config/encrypt:
    get:
      tags:
        - Config
      summary: Encrypt a Config
      description: Returns a list of Base64-encoded configs with encrypted pending configurations for each of Devices or Device types specified in a request. This payload can be sent directly via Bluetooth to a device in order to change its settings. If no query parameters are provided, this endpoint returns encrypted versions of all pending configurations.
      parameters:
        - name: uniqueId
          in: query
          description: List of Unique IDs with existing pending configurations
          required: false
          schema:
            type: array
            items:
              type: string
        - name: deviceType
          in: query
          description: Device type. Only pending configurations for devices of this type will be encrypted and returned.
          required: false
          schema:
            type: string
            enum:
              - BEACON
              - GATEWAY
      x-code-samples:
        - lang: cURL
          source: "curl \"https://api.kontakt.io/config/encrypt?uniqueId=kwSa\"\n     -H 'Api-Key: yourSuperSecretAPIKey'\n     -H 'Accept: application/vnd.com.kontakt+json;version=10'"
        - lang: HTTP
          source: "GET /config/encrypt?uniqueId=kwSa HTTP/1.1\nAccept: application/vnd.com.kontakt+json;version=10\nApi-Key: yourSuperSecretAPIKey\nHost: api.kontakt.io\nConnection: close\nUser-Agent: Paw/3.1.4 (Macintosh; OS X/10.13.3) GCDHTTPRequest"
      responses:
        '200':
          description: OK
          content:
            'application/vnd.com.kontakt+json;version=10':
              schema:
                type: object
                properties:
                  configs:
                    type: array
                    items:
                      $ref: '#/components/schemas/ConfigEncrypted'
                  searchMeta:
                    $ref: '#/components/schemas/SearchMeta'
  /config/delete:
    post:
      tags:
        - Config
      summary: Delete a Config
      description: Delete a single pending configuration
      requestBody:
        content:
          'application/x-www-form-urlencoded':
            schema:
              properties:
                uniqueId:
                  description: Unique ID of a Device which pending configuration should be removed
                  type: string
              required:
                - uniqueId
      x-code-samples:
        - lang: cURL
          source: "curl -X \"POST\" \"https://api.kontakt.io/config/delete\"\n     -H 'Api-Key: yourSuperSecretAPIKey'\n     -H 'Content-Type: application/x-www-form-urlencoded; charset=utf-8'\n     -H 'Accept: application/vnd.com.kontakt+json;version=10'\n     --data-urlencode \"uniqueId=kwSa\""
        - lang: HTTP
          source: "POST /config/delete HTTP/1.1\nAccept: application/vnd.com.kontakt+json;version=10\nApi-Key: yourSuperSecretAPIKey\nContent-Type: application/x-www-form-urlencoded; charset=utf-8\nHost: api.kontakt.io\nConnection: close\nUser-Agent: Paw/3.1.4 (Macintosh; OS X/10.13.3) GCDHTTPRequest\nContent-Length: 13\n\nuniqueId=kwSa"
      responses:
        '200':
          description: OK
          content:
            'application/vnd.com.kontakt+json; version=10':
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Success message
                    example: 'Delete successful.'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
          content: 
            'application/json':
              schema:
                $ref: '#/components/schemas/ApiError'
        '422':
          description: Unprocessable Entity
          content: 
            'application/json':
              schema:
                $ref: '#/components/schemas/ApiError'
  /device:
    get:
      tags:
        - Device
      summary: Get Devices
      description: |
        Returns all devices assigned to a given account, as well as devices belonging to this account's subordinates and devices shared with this account from different accounts.
        
        Results can be filtered using query parameters specified below.
        
        This endpoind can also be used to decrypt Eddystone EID packets by providing their content in the `eid` parameter.
      parameters:
        - name: uniqueId
          in: query
          description: Unique IDs of devices that should be returned in a response
          required: false
          schema:
            type: array
            items:
              type: string
        - $ref: '#/components/parameters/DeviceType'
        - name: managerId
          in: query
          description: Returns only devices belonging to Managers with specified IDs
          required: false
          schema:
            type: array
            items:
              type: string
        - name: bid
          in: query
          description: Returns only beacons configured to broadcast iBeacon packets with specified identifiers. Each beacon should be represented as a colon-separated tuple of Proximity UUID, Major and Minor, e.g. `3C4BDEE8-D6FA-4A33-9AB7-B327D9200D4D:433:16621` (ProximityUUID:Major:Minor).
          required: false
          schema:
            type: array
            items:
              type: string
        - name: euid
          in: query
          description: Returns only beacons configured to broadcast Eddystone UID packets with specified identifiers. Each beacon should be represented as colon-separated tuple of Namespace and Instance ID, e.g. `8c0a2a6b2d754d9ba600:736366476b70` (Namespace:InstanceID).
          required: false
          schema:
            type: array
            items:
              type: string
        - name: eid
          in: query
          description: Returns only beacons that correspond with provided Eddystone EID packets, in the same order as packets were specified in the query.
          required: false
          schema:
            type: array
            items:
              type: string
        - $ref: '#/components/parameters/Profile'
        - name: access
          in: query
          description: Limits the response body only to devices with specified access level.
          required: false
          schema:
            type: string
            enum:
              - OWNER
              - SUPERVISOR
              - EDITOR
              - VIEWER
        - $ref: '#/components/parameters/MaxResult'
        - $ref: '#/components/parameters/QueryType'
      x-code-samples:
        - lang: cURL
          source: "curl \"https://api.kontakt.io/device?access=SUPERVISOR\"\n     -H 'Api-Key: yourSuperSecretAPIKey'\n     -H 'Accept: application/vnd.com.kontakt+json;version=10'"
        - lang: HTTP
          source: "GET /device?access=SUPERVISOR HTTP/1.1\nAccept: application/vnd.com.kontakt+json;version=10\nApi-Key: yourSuperSecretAPIKey\nHost: api.kontakt.io\nConnection: close\nUser-Agent: Paw/3.1.4 (Macintosh; OS X/10.13.3) GCDHTTPRequest"
      responses:
        '200':
          description: OK
          content:
            'application/vnd.com.kontakt+json;version=10':
              schema:
                type: object
                properties:
                  devices:
                    type: array
                    items:
                      $ref: '#/components/schemas/Device'
                  searchMeta:
                    $ref: '#/components/schemas/SearchMeta'
  /device/status:
    get:
      tags:
        - Device
      summary: Get Devices' Statuses
      description: Returns Beacon Health information for specified Unique IDs
      parameters:
        - name: uniqueId
          in: query
          description: List of Beacon Unique IDs that should be checked. Gateway GW16-2 Unique IDs are ignored.
          required: false
          schema:
            type: array
            items:
              type: string
      x-code-samples:
        - lang: cURL
          source: "curl \"https://api.kontakt.io/device/status?uniqueId=pf86,tJuw\"\n     -H 'Api-Key: yourSuperSecretAPIKey'\n     -H 'Accept: application/vnd.com.kontakt+json;version=10'"
        - lang: HTTP
          source: "GET /device/status?uniqueId=pf86,tJuw HTTP/1.1\nAccept: application/vnd.com.kontakt+json;version=10\nApi-Key: yourSuperSecretAPIKey\nHost: api.kontakt.io\nConnection: close\nUser-Agent: Paw/3.1.4 (Macintosh; OS X/10.13.3) GCDHTTPRequest"
      responses:
        '200':
          description: OK
          content:
            'application/vnd.com.kontakt+json;version=10':
              schema:
                type: object
                properties:
                  statuses:
                    type: array
                    items:
                      $ref: '#/components/schemas/DeviceStatus'
                  searchMeta:
                    $ref: '#/components/schemas/SearchMeta'
  /device/credentials:
    get:
      tags:
        - Device
      summary: Get Devices' Credentials
      description: Returns various Credentials for specified Devices. That includes a Password, which is needed for general operations, as well a Master Password, required for firmware upgrades on older beacons.
      parameters:
        - name: uniqueId
          in: query
          description: List of Device Unique IDs that Credentials are requested for
          required: true
          schema:
            type: array
            items:
              type: string
      x-code-samples:
        - lang: cURL
          source: "curl \"https://api.kontakt.io/device/credentials?uniqueId=pf86,sojk,6nYd\"\n     -H 'Api-Key: yourSuperSecretAPIKey'\n     -H 'Accept: application/vnd.com.kontakt+json;version=10'"
        - lang: HTTP
          source: "GET /device/credentials?uniqueId=pf86,sojk,6nYd HTTP/1.1\nAccept: application/vnd.com.kontakt+json;version=10\nApi-Key: yourSuperSecretAPIKey\nHost: api.kontakt.io\nConnection: close\nUser-Agent: Paw/3.1.4 (Macintosh; OS X/10.13.3) GCDHTTPRequest"
      responses:
        '200':
          description: OK
          content:
            'application/vnd.com.kontakt+json;version=10':
              schema:
                type: object
                properties:
                  credentials:
                    type: array
                    items:
                      type: object
                      properties:
                        uniqueId:
                          type: string
                          description: Unique ID
                        password:
                          type: string
                          description: Password
                        masterPassword:
                          type: string
                          description: Master Password
                        eidIdentityKey:
                          type: string
                          description: Eddystone-EID Identity Key
                  searchMeta:
                    $ref: '#/components/schemas/SearchMeta'
  /device/update:
    post:
      tags:
        - Device
      summary: Update a Device
      description: |
        This endpoint allows to perform one of two operations, depending on request's body schema:
        * sending **Secure Response** that has been read from a beacon after sucesfull aplication of a new configuration
        * editing **virtual attributes** of a device
        
        For more information please refer to [Configuration Guide](/hardware/configuration/).
      requestBody:
        content:
          'application/x-www-form-urlencoded':
            schema:
              oneOf:
                - $ref: '#/components/schemas/DeviceUpdateSecureResponse'
                - $ref: '#/components/schemas/DeviceUpdateRaw'
      x-code-samples:
        - lang: cURL
          source: "curl -X \"POST\" \"https://api.kontakt.io/device/update\"\n     -H 'Api-Key: yourSuperSecretAPIKey'\n     -H 'Content-Type: application/x-www-form-urlencoded; charset=utf-8'\n     -H 'Accept: application/vnd.com.kontakt+json;version=10'\n     --data-urlencode \"response=AAEQIgCMnNRaGS0vnGIgiJ0MkGxT9fJH91ocb8WpFy4YPm3Ckz4B\"\n     --data-urlencode \"uniqueId=pf86\"\n     --data-urlencode \"updated=1524140752\"\n     --data-urlencode \"deviceType=BEACON\""
        - lang: HTTP
          source: "POST /device/update HTTP/1.1\nAccept: application/vnd.com.kontakt+json;version=10\nApi-Key: yourSuperSecretAPIKey\nContent-Type: application/x-www-form-urlencoded; charset=utf-8\nHost: api.kontakt.io\nConnection: close\nUser-Agent: Paw/3.1.4 (Macintosh; OS X/10.13.4) GCDHTTPRequest\nContent-Length: 112\n\nuniqueId=pf86&response=AAEQIgCMnNRaGS0vnGIgiJ0MkGxT9fJH91ocb8WpFy4YPm3Ckz4B&updated=1524140137&deviceType=BEACON"
      responses:
        '200':
          description: OK
          content:
            'application/vnd.com.kontakt+json; version=10':
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Success message
                    example: 'Update successful.'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '404':
          description: Not Found
          content: 
            'application/json':
              schema:
                $ref: '#/components/schemas/ApiError'
        '422':
          description: Unprocessable Entity
          content: 
            'application/json':
              schema:
                $ref: '#/components/schemas/ApiError'
  /device/unassigned/{managerId}:
    get:
      tags:
        - Device
      summary: Get unassigned Devices
      description: Returns a list of Devices belonging to a specified Manager and that Manager's Subordiante Accounts, that haven't been assigned to any Venue (Location)
      parameters:
        - name: managerId
          in: path
          description: Manager ID This can be either an ID of a Manager that provides the API Key, or and ID of one of that Manager's Subordinate Manager.
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/DeviceType'
        - $ref: '#/components/parameters/Profile'
      x-code-samples:
        - lang: cURL
          source: "curl \"https://api.kontakt.io/device/unassigned/6b622cee-c0a7-4933-bace-2939e1f818a\"\n     -H 'Api-Key: yourSuperSecretAPIKey'\n     -H 'Accept: application/vnd.com.kontakt+json;version=10'"
        - lang: HTTP
          source: "GET /device/unassigned/6b622cee-c0a7-4933-bace-2939e1f818a HTTP/1.1\nAccept: application/vnd.com.kontakt+json;version=10\nApi-Key: yourSuperSecretAPIKey\nHost: api.kontakt.io\nConnection: close\nUser-Agent: Paw/3.1.4 (Macintosh; OS X/10.13.3) GCDHTTPRequest"
      responses:
        '200':
          description: OK
          content:
            'application/vnd.com.kontakt+json;version=10':
              schema:
                type: object
                properties:
                  devices:
                    type: array
                    items:
                      $ref: '#/components/schemas/Device'
                  searchMeta:
                    $ref: '#/components/schemas/SearchMeta'
        '404':
          description: Not Found
          content: 
            'application/json':
              schema:
                $ref: '#/components/schemas/ApiError'
  /device/assign:
    post:
      tags:
        - Device
      summary: Assign Devices to a Venue or a Manager
      description: This endpoint provides multiple uses, depending on a combination of request body parameters and values used. It allows either assigning devices to a Venue (Location) on Manager's account, or assigning them to Manager's subordinate accounts (Admins and/or Operators). The Devices can also be identified by their Unique IDs or API UUIDs.
      requestBody:
        content:
          'application/x-www-form-urlencoded':
            schema:
              oneOf:
                - $ref: '#/components/schemas/AssignUniqueIdVenue'
                - $ref: '#/components/schemas/AssignUniqueIdManager'
                - $ref: '#/components/schemas/AssignDeviceIdVenue'
                - $ref: '#/components/schemas/AssignDeviceIdManager'
      x-code-samples:
        - lang: cURL
          source: "curl -X \"POST\" \"https://api.kontakt.io/device/assign\"\n     -H 'Api-Key: yourSuperSecretAPIKey'\n     -H 'Content-Type: application/x-www-form-urlencoded; charset=utf-8'\n     -H 'Accept: application/vnd.com.kontakt+json;version=10'\n     --data-urlencode \"managerId=6b622cee-c0a7-4933-bace-2939e1f818a6\"\n     --data-urlencode \"uniqueId=If9z\""
        - lang: HTTP
          source: "POST /device/assign HTTP/1.1\nAccept: application/vnd.com.kontakt+json;version=10\nApi-Key: yourSuperSecretAPIKey\nContent-Type: application/x-www-form-urlencoded; charset=utf-8\nHost: api.kontakt.io\nConnection: close\nUser-Agent: Paw/3.1.4 (Macintosh; OS X/10.13.3) GCDHTTPRequest\nContent-Length: 60\n\nuniqueId=If9z&managerId=6b622cee-c0a7-4933-bace-2939e1f818a6"
      responses:
        '200':
          description: OK
          content:
            'application/vnd.com.kontakt+json; version=10':
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Success message
                    example: 'Update successful.'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
          content: 
            'application/json':
              schema:
                $ref: '#/components/schemas/ApiError'
        '422':
          description: Unprocessable Entity
          content: 
            'application/json':
              schema:
                $ref: '#/components/schemas/ApiError'
  /device/unassign:
    # This is a bit problematic name: https://english.stackexchange.com/questions/59463/antonym-to-assign
    post:
      tags:
        - Device
      summary: Unassign Devices form Venues (Locations)
      description: Removes specified Devices from their respective Venues (Locations). It also works when a device is assigned to Subordinate Manager - if on that account a device is assigned to a Venue (Location), it will be removed from it as well.
      requestBody:
        content:
          'application/x-www-form-urlencoded':
            schema:
              properties:
                uniqueId:
                  description: List of Device Unique IDs that should be removed from their Venues (Locations)
                  type: array
                  items:
                    type: string
              required:
                - uniqueId
      x-code-samples:
        - lang: cURL
          source: "curl -X \"POST\" \"https://api.kontakt.io/device/unassign\"\n     -H 'Api-Key: yourSuperSecretAPIKey'\n     -H 'Content-Type: application/x-www-form-urlencoded; charset=utf-8'\n     -H 'Accept: application/vnd.com.kontakt+json;version=10'\n     --data-urlencode \"uniqueId=5loe,pf86\""
        - lang: HTTP
          source: "POST /device/unassign HTTP/1.1\nAccept: application/vnd.com.kontakt+json;version=10\nApi-Key: yourSuperSecretAPIKey\nContent-Type: application/x-www-form-urlencoded; charset=utf-8\nHost: api.kontakt.io\nConnection: close\nUser-Agent: Paw/3.1.4 (Macintosh; OS X/10.13.3) GCDHTTPRequest\nContent-Length: 20\n\nuniqueId=5loe%2Cpf86"
      responses:
        '200':
          description: OK
          content:
            'application/vnd.com.kontakt+json; version=10':
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Success message
                    example: 'Update successful.'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
          content: 
            'application/json':
              schema:
                $ref: '#/components/schemas/ApiError'
        '422':
          description: Unprocessable Entity
          content: 
            'application/json':
              schema:
                $ref: '#/components/schemas/ApiError'
  /device/move:
    post:
      tags:
        - Device
      summary: Move Devices
      description: Moves Devices to an external Manager (from a different Company). Once this operation is successfully performed the user will no longer have any control over Devices that have been moved. Getting them back will require an action from the receiving Manager.
      requestBody:
        content:
          'application/x-www-form-urlencoded':
            schema:
              properties:
                uniqueId:
                  description: List of Beacon and/or Gateway GW16-2 Unique IDs that should be moved to an external Manager.
                  type: array
                  items:
                    type: string
                managerEmail:
                  description: Email of the external Manager that should receive Devices.
                  type: string
                  format: email
              required:
                - uniqueId
                - managerEmail
      x-code-samples:
        - lang: cURL
          source: "curl -X \"POST\" \"https://api.kontakt.io/device/move\"\n     -H 'Api-Key: yourSuperSecretAPIKey'\n     -H 'Content-Type: application/x-www-form-urlencoded; charset=utf-8'\n     -H 'Accept: application/vnd.com.kontakt+json;version=10'\n     --data-urlencode \"managerEmail=username@domain.tld\"\n     --data-urlencode \"uniqueId=U4OP\""
        - lang: HTTP
          source: "POST /device/move HTTP/1.1\nAccept: application/vnd.com.kontakt+json;version=10\nApi-Key: yourSuperSecretAPIKey\nContent-Type: application/x-www-form-urlencoded; charset=utf-8\nHost: api.kontakt.io\nConnection: close\nUser-Agent: Paw/3.1.4 (Macintosh; OS X/10.13.3) GCDHTTPRequest\nContent-Length: 48\n\nuniqueId=U4OP&managerEmail=username%40domain.tld"
      responses:
        '200':
          description: OK
          content:
            'application/vnd.com.kontakt+json; version=10':
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Success message
                    example: 'Move successful.'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
          content: 
            'application/json':
              schema:
                $ref: '#/components/schemas/ApiError'
        '422':
          description: Unprocessable Entity
          content: 
            'application/json':
              schema:
                $ref: '#/components/schemas/ApiError'
  /device/share:
    post:
      tags:
        - Device
      summary: Share Devices
      description: Share Devices with other Managers. Receiving Managers, depending on their access type, will be able to create new configurations, monitor battery levels, deshuffle secure identifiers, etc., but you will still be the Owner of shared Devices.
      requestBody:
        content:
          'application/x-www-form-urlencoded':
            schema:
              properties:
                uniqueId:
                  type: array
                  description: List of Unique IDs of Devices that should be shared with Managers
                  items:
                    type: string
                managerMail:
                  type: array
                  description: List of email addresses of Managers with whom Devices should be shared with
                  items:
                    type: string
                    format: email
                access:
                  type: string
                  description: Access type that should be given to Managers for the shared Devices
                  enum:
                    - EDITOR
                    - VIEWER
                expirationDate:
                  description: An optional future date when shared access should be revoked. Specified as a Unix epoch timestamp. If not set, Devices will be shared indefinitely.
                  type: integer
                withMetadata:
                  description: Flag indicating whether Devices' Metadata should also be shared with Managers (`true`) or not (`false`)
                  type: boolean
                  default: false
              required:
                - uniqueId
                - managerMail
                - access
      x-code-samples:
        - lang: cURL
          source: "curl -X \"POST\" \"https://api.kontakt.io/device/share\"\n     -H 'Api-Key: yourSuperSecretAPIKey'\n     -H 'Content-Type: application/x-www-form-urlencoded; charset=utf-8'\n     -H 'Accept: application/vnd.com.kontakt+json;version=10'\n     --data-urlencode \"access=EDITOR\"\n     --data-urlencode \"expirationDate=1516874968\"\n     --data-urlencode \"uniqueId=1nau\"\n     --data-urlencode \"managerMail=marty.mchack@kontakt.io\"\n     --data-urlencode \"withMetadata=true\""
        - lang: HTTP
          source: "POST /device/share HTTP/1.1\nAccept: application/vnd.com.kontakt+json;version=10\nApi-Key: yourSuperSecretAPIKey\nContent-Type: application/x-www-form-urlencoded; charset=utf-8\nHost: api.kontakt.io\nConnection: close\nUser-Agent: Paw/3.1.4 (Macintosh; OS X/10.13.3) GCDHTTPRequest\nContent-Length: 110\n\nuniqueId=1nau&managerMail=marty.mchack%40kontakt.io&access=EDITOR&expirationDate=1516876204&withMetadata=true"
      responses:
        '200':
          description: OK
          content:
            'application/vnd.com.kontakt+json; version=10':
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Success message
                    example: 'Update successful.'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
          content: 
            'application/json':
              schema:
                $ref: '#/components/schemas/ApiError'
        '422':
          description: Unprocessable Entity
          content: 
            'application/json':
              schema:
                $ref: '#/components/schemas/ApiError'
  /device/unshare:
    post:
      tags:
        - Device
      summary: Revoke Device Shares
      description: Revoke Manager's access to shared Devices
      requestBody:
        content:
          'application/x-www-form-urlencoded':
            schema:
              properties:
                uniqueId:
                  type: array
                  description: List of Unique IDs of Devices that should no longer be shared with specified Managers
                  items:
                    type: string
                managerMail:
                  type: array
                  description: List of email addresses associated with Managers that should no longer have access to specified Devices
                  items:
                    type: string
                    format: email
              required:
                - uniqueId
                - managerMail
      x-code-samples:
        - lang: cURL
          source: "curl -X \"POST\" \"https://api.kontakt.io/device/unshare\"\n     -H 'Api-Key: yourSuperSecretAPIKey'\n     -H 'Content-Type: application/x-www-form-urlencoded; charset=utf-8'\n     -H 'Accept: application/vnd.com.kontakt+json;version=10'\n     --data-urlencode \"managerMail=marty.mchack@kontakt.io\"\n     --data-urlencode \"uniqueId=1nau\""
        - lang: HTTP
          source: "POST /device/unshare HTTP/1.1\nAccept: application/vnd.com.kontakt+json;version=10\nApi-Key: yourSuperSecretAPIKey\nContent-Type: application/x-www-form-urlencoded; charset=utf-8\nHost: api.kontakt.io\nConnection: close\nUser-Agent: Paw/3.1.4 (Macintosh; OS X/10.13.3) GCDHTTPRequest\nContent-Length: 52\n\nuniqueId=1nau&managerMail=mart.mchack%40kontakt.io"
      responses:
        '200':
          description: OK
          content:
            'application/vnd.com.kontakt+json; version=10':
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Success message
                    example: 'Update successful'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
          content: 
            'application/json':
              schema:
                $ref: '#/components/schemas/ApiError'
        '422':
          description: Unprocessable Entity
          content: 
            'application/json':
              schema:
                $ref: '#/components/schemas/ApiError'
  /device/vendor/cassia/create:
    post:
      tags:
        - Device (3rd party)
      summary: Add a Cassia Integration
      description: |
        This endpoint allows to associate your Cassia controller with Kontakt.io platform, enabling to use Cassia devices as external data sources for Data Streams
      requestBody:
        content:
          'application/x-www-form-urlencoded':
            schema:
              properties:
                developerKey:
                  type: string
                  description: Developer Key used for authentication on Cassia's backend
                developerSecret:
                  type: string
                  description: Developer Secret used for authentication on Cassia's backend
                accessControllerAddress:
                  type: string
                  description: URL address of Cassia Access Controller
                  format: url
              required:
                - developerKey
                - developerSecret
                - accessControllerAddress
      x-code-samples:
        - lang: cURL
          source: "curl -X \"POST\" \"https://api.kontakt.io/device/vendor/cassia/create\"\n     -H 'Api-Key: yourSuperSecretAPIKey'\n     -H 'Content-Type: application/x-www-form-urlencoded; charset=utf-8'\n     -H 'Accept: application/vnd.com.kontakt+json;version=10'\n     --data-urlencode \"developerSecret=SuperSecretString\"\n     --data-urlencode \"developerKey=skhefgjhdfgv347fsfdv\"\n     --data-urlencode \"accessControllerAddress=https://your.controller.com\""
        - lang: HTTP
          source: "POST /device/vendor/cassia/create HTTP/1.1\nAccept: application/vnd.com.kontakt+json;version=10\nApi-Key: yourSuperSecretAPIKey\nContent-Type: application/x-www-form-urlencoded; charset=utf-8\nHost: api.kontakt.io\nConnection: close\nUser-Agent: Paw/3.1.4 (Macintosh; OS X/10.13.4) GCDHTTPRequest\nContent-Length: 125\n\ndeveloperKey=skhefgjhdfgv347fsfdv&developerSecret=SuperSecretString&accessControllerAddress=https%3A%2F%2Fyour.controller.com"
      responses:
        '200':
          description: OK
          content:
            'application/vnd.com.kontakt+json; version=10':
              schema:
                type: object
                properties:
                  developerKey:
                    type: string
                    description: Developer Key used for authentication on Cassia's backend
                    example: skhefgjhdfgv347fsfdv
                  developerSecret:
                    type: string
                    description: Developer Secret used for authentication on Cassia's backend
                    example: SuperSecretString
                  accessControllerAddress:
                    type: string
                    description: URL address of Cassia Access Controller
                    format: url
                    example: https://your.controller.com
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '404':
          description: Not Found
          content: 
            'application/json':
              schema:
                $ref: '#/components/schemas/ApiError'
        '422':
          description: Unprocessable Entity
          content: 
            'application/json':
              schema:
                $ref: '#/components/schemas/ApiError'
  /device/vendor/cassia/update:
    post:
      tags:
        - Device (3rd party)
      summary: Update a Cassia Integration
      description: |
        This endpoint allows to update an already existing integration with a Cassia platform
      requestBody:
        content:
          'application/x-www-form-urlencoded':
            schema:
              properties:
                developerKey:
                  type: string
                  description: Developer Key used for authentication on Cassia's backend
                developerSecret:
                  type: string
                  description: Developer Secret used for authentication on Cassia's backend
                accessControllerAddress:
                  type: string
                  description: URL address of Cassia Access Controller
                  format: url
              required:
                - developerKey
                - developerSecret
                - accessControllerAddress
      x-code-samples:
        - lang: cURL
          source: "curl -X \"POST\" \"https://api.kontakt.io/device/vendor/cassia/update\"\n     -H 'Api-Key: yourSuperSecretAPIKey'\n     -H 'Content-Type: application/x-www-form-urlencoded; charset=utf-8'\n     -H 'Accept: application/vnd.com.kontakt+json;version=10'\n     --data-urlencode \"developerSecret=SuperSecretString\"\n     --data-urlencode \"developerKey=skhefgjhdfgv347fsfdv\"\n     --data-urlencode \"accessControllerAddress=https://your.controller.com\""
        - lang: HTTP
          source: "POST /device/vendor/cassia/update HTTP/1.1\nAccept: application/vnd.com.kontakt+json;version=10\nApi-Key: yourSuperSecretAPIKey\nContent-Type: application/x-www-form-urlencoded; charset=utf-8\nHost: api.kontakt.io\nConnection: close\nUser-Agent: Paw/3.1.4 (Macintosh; OS X/10.13.4) GCDHTTPRequest\nContent-Length: 125\n\ndeveloperKey=skhefgjhdfgv347fsfdv&developerSecret=SuperSecretString&accessControllerAddress=https%3A%2F%2Fyour.controller.com"
      responses:
        '200':
          description: OK
          content:
            'application/vnd.com.kontakt+json; version=10':
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Success message
                    example: Update successful
        '401':
          description: Unauthorized
        '404':
          description: Not Found
          content: 
            'application/json':
              schema:
                $ref: '#/components/schemas/ApiError'
        '422':
          description: Unprocessable Entity
          content: 
            'application/json':
              schema:
                $ref: '#/components/schemas/ApiError'
  /device/vendor/cassia/delete:
    post:
      tags:
        - Device (3rd party)
      summary: Delete a Cassia Integration
      description: |
        This endpoint allows to remove a Cassia integration
      x-code-samples:
        - lang: cURL
          source: "curl -X \"POST\" \"https://api.kontakt.io/device/vendor/cassia/delete\"\n     -H 'Api-Key: yourSuperSecretAPIKey'\n     -H 'Content-Type: application/x-www-form-urlencoded; charset=utf-8'\n     -H 'Accept: application/vnd.com.kontakt+json;version=10'"
        - lang: HTTP
          source: "POST /device/vendor/cassia/delete HTTP/1.1\nAccept: application/vnd.com.kontakt+json;version=10\nApi-Key: yourSuperSecretAPIKey\nContent-Type: application/x-www-form-urlencoded; charset=utf-8\nHost: api.kontakt.io\nConnection: close\nUser-Agent: Paw/3.1.4 (Macintosh; OS X/10.13.4) GCDHTTPRequest\nContent-Length: 0"
      responses:
        '200':
          description: OK
          content:
            'application/vnd.com.kontakt+json; version=10':
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Delete message
                    example: Delete successful
        '401':
          description: Unauthorized
        '404':
          description: Not Found
          content: 
            'application/json':
              schema:
                $ref: '#/components/schemas/ApiError'
        '422':
          description: Unprocessable Entity
          content: 
            'application/json':
              schema:
                $ref: '#/components/schemas/ApiError'
  /device/vendor/meraki/create:
    post:
      tags:
        - Device (3rd party)
      summary: Add a Meraki Integration
      description: |
        This endpoint allows to associate your Meraki controller with Kontakt.io platform, enabling to use Meraki devices as external data sources for Data Streams
      requestBody:
        content:
          'application/x-www-form-urlencoded':
            schema:
              properties:
                apiKey:
                  type: string
                  description: API Key used for authentication on Meraki's cloud
                secret:
                  type: string
                  description: Secret used for authentication on Meraki's backend
                validator:
                  type: string
                  description: Verification token ensuring Meraki's cloud that the endpoint is correct
              required:
                - apiKey
                - secret
                - validator
      x-code-samples:
        - lang: cURL
          source: "curl -X \"POST\" \"https://api.kontakt.io/device/vendor/meraki/create\"\n     -H 'Api-Key: yourSuperSecretAPIKey'\n     -H 'Content-Type: application/x-www-form-urlencoded; charset=utf-8'\n     -H 'Accept: application/vnd.com.kontakt+json;version=10'\n     --data-urlencode \"secret=SuperSecretString\"\n     --data-urlencode \"apiKey=skhefgjhdfgv347fsfdv\"\n     --data-urlencode \"validator=lekur8934hiu2ghebv0tbshef\""
        - lang: HTTP
          source: "POST /device/vendor/meraki/create HTTP/1.1\nAccept: application/vnd.com.kontakt+json;version=10\nApi-Key: yourSuperSecretAPIKey\nContent-Type: application/x-www-form-urlencoded; charset=utf-8\nHost: api.kontakt.io\nConnection: close\nUser-Agent: Paw/3.1.4 (Macintosh; OS X/10.13.4) GCDHTTPRequest\nContent-Length: 125\n\napiKey=skhefgjhdfgv347fsfdv&secret=SuperSecretString&validator=lekur8934hiu2ghebv0tbshef"
      responses:
        '200':
          description: OK
          content:
            'application/vnd.com.kontakt+json; version=10':
              schema:
                type: object
                properties:
                  apiKey:
                    type: string
                    description: API Key used for authentication on Meraki's cloud
                    example: skhefgjhdfgv347fsfdv
                  secret:
                    type: string
                    description: Secret used for authentication on Meraki's backend
                    example: SuperSecretString
                  validator:
                    type: string
                    description: Verification token ensuring Meraki's cloud that the endpoint is correct
                    example: lekur8934hiu2ghebv0tbshef
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '404':
          description: Not Found
          content: 
            'application/json':
              schema:
                $ref: '#/components/schemas/ApiError'
        '422':
          description: Unprocessable Entity
          content: 
            'application/json':
              schema:
                $ref: '#/components/schemas/ApiError'
  /device/vendor/meraki/update:
    post:
      tags:
        - Device (3rd party)
      summary: Update a Meraki Integration
      description: |
        This endpoint allows to update an already existing integration with a Meraki platform
      requestBody:
        content:
          'application/x-www-form-urlencoded':
            schema:
              properties:
                apiKey:
                  type: string
                  description: API Key used for authentication on Meraki's cloud
                secret:
                  type: string
                  description: Secret used for authentication on Meraki's backend
                validator:
                  type: string
                  description: Verification token ensuring Meraki's cloud that the endpoint is correct
              required:
                - apiKey
                - secret
                - validator
      x-code-samples:
        - lang: cURL
          source: "curl -X \"POST\" \"https://api.kontakt.io/device/vendor/meraki/update\"\n     -H 'Api-Key: yourSuperSecretAPIKey'\n     -H 'Content-Type: application/x-www-form-urlencoded; charset=utf-8'\n     -H 'Accept: application/vnd.com.kontakt+json;version=10'\n     --data-urlencode \"secret=SuperSecretString\"\n     --data-urlencode \"apiKey=skhefgjhdfgv347fsfdv\"\n     --data-urlencode \"validator=lekur8934hiu2ghebv0tbshef\""
        - lang: HTTP
          source: "POST /device/vendor/meraki/update HTTP/1.1\nAccept: application/vnd.com.kontakt+json;version=10\nApi-Key: yourSuperSecretAPIKey\nContent-Type: application/x-www-form-urlencoded; charset=utf-8\nHost: api.kontakt.io\nConnection: close\nUser-Agent: Paw/3.1.4 (Macintosh; OS X/10.13.4) GCDHTTPRequest\nContent-Length: 125\n\napiKey=skhefgjhdfgv347fsfdv&secret=SuperSecretString&validator=lekur8934hiu2ghebv0tbshef"
      responses:
        '200':
          description: OK
          content:
            'application/vnd.com.kontakt+json; version=10':
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Success message
                    example: Update successful
        '401':
          description: Unauthorized
        '404':
          description: Not Found
          content: 
            'application/json':
              schema:
                $ref: '#/components/schemas/ApiError'
        '422':
          description: Unprocessable Entity
          content: 
            'application/json':
              schema:
                $ref: '#/components/schemas/ApiError'
  /device/vendor/meraki/delete:
    post:
      tags:
        - Device (3rd party)
      summary: Delete a Meraki Integration
      description: |
        This endpoint allows to remove a Meraki integration
      x-code-samples:
        - lang: cURL
          source: "curl -X \"POST\" \"https://api.kontakt.io/device/vendor/meraki/delete\"\n     -H 'Api-Key: yourSuperSecretAPIKey'\n     -H 'Content-Type: application/x-www-form-urlencoded; charset=utf-8'\n     -H 'Accept: application/vnd.com.kontakt+json;version=10'"
        - lang: HTTP
          source: "POST /device/vendor/meraki/delete HTTP/1.1\nAccept: application/vnd.com.kontakt+json;version=10\nApi-Key: yourSuperSecretAPIKey\nContent-Type: application/x-www-form-urlencoded; charset=utf-8\nHost: api.kontakt.io\nConnection: close\nUser-Agent: Paw/3.1.4 (Macintosh; OS X/10.13.4) GCDHTTPRequest\nContent-Length: 0"
      responses:
        '200':
          description: OK
          content:
            'application/vnd.com.kontakt+json; version=10':
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Delete message
                    example: Delete successful
        '401':
          description: Unauthorized
        '404':
          description: Not Found
          content: 
            'application/json':
              schema:
                $ref: '#/components/schemas/ApiError'
        '422':
          description: Unprocessable Entity
          content: 
            'application/json':
              schema:
                $ref: '#/components/schemas/ApiError'
  /device/register:
    post:
      tags:
        - Device (3rd party)
      summary: Add a 3rd party device
      description: |
        This endpoint allows to register a 3rd routers on Kontakt.io platform, enabling them to be used as external data sources for Data Streams
      requestBody:
        content:
          'application/x-www-form-urlencoded':
            schema:
              properties:
                uniqueId:
                  type: string
                  description: MAC address of a router you want to register
                vendor:
                  type: string
                  description: Manufacturer of a device. Only routers/access points made by a vendor that your account is integrated with can be added.
                  enum:
                    - CASSIA
                    - MERAKI
                    - RUCKUS
                properties:
                  type: object
                  description: Additional properties describing a device
              required:
                - uniqueId
      x-code-samples:
        - lang: cURL
          source: "curl -X \"POST\" \"https://api.kontakt.io/device/register\"\n     -H 'Api-Key: yourSuperSecretAPIKey'\n     -H 'Content-Type: application/x-www-form-urlencoded; charset=utf-8'\n     -H 'Accept: application/vnd.com.kontakt+json;version=10'\n     --data-urlencode \"uniqueId=00:AA:11:BB:22:CC\"\n     --data-urlencode \"vendor=CASSIA\"\n     --data-urlencode \"properties.customParameter1=Value 1\"\n     --data-urlencode \"properties.customParameter2=Value 2\""
        - lang: HTTP
          source: "POST /device/register HTTP/1.1\nAccept: application/vnd.com.kontakt+json;version=10\nApi-Key: yourSuperSecretAPIKey\nContent-Type: application/x-www-form-urlencoded; charset=utf-8\nHost: api.kontakt.io\nConnection: close\nUser-Agent: Paw/3.1.4 (Macintosh; OS X/10.13.4) GCDHTTPRequest\nContent-Length: 122\n\nuniqueId=00%3AAA%3A11%3ABB%3A22%3ACC&vendor=CASSIA&properties.customParameter1=Value+1&properties.customParameter2=Value+2"
      responses:
        '200':
          description: OK
          content:
            'application/vnd.com.kontakt+json; version=10':
              schema:
                $ref: '#/components/schemas/External'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '404':
          description: Not Found
          content: 
            'application/json':
              schema:
                $ref: '#/components/schemas/ApiError'
        '422':
          description: Unprocessable Entity
          content: 
            'application/json':
              schema:
                $ref: '#/components/schemas/ApiError'
  /eddystone:
    post:
      tags:
        - Eddystone
      summary: Decrypt Eddystone Encrypted Telemetry packet
      description: | 
        Decrypts Eddystone Telemetry data from an Eddystone Encrypted Telemetry frame. This information can be extracted by specifying one of the two sets of information in the request's parameters:
        
        * Beacon's Unique ID (`uniqueId`) and its Eddystone Encrypted Telemetry frame (`frame`)
        * Eddystone Ephemeral ID (`eid`) and corresponding Eddystone Encrypted Telemetry frame (`frame`)
      requestBody:
        content:
          'application/x-www-form-urlencoded':
            schema:
              properties:
                uniqueId:
                  description: Unique ID. Should be used only if `eid` is not specified.
                  type: string
                eid:
                  description: Eddystone Ephemeral ID. Should be used only if `uniqueId` is not specified.
                  type: string
                frame:
                  description: Base64-encoded Eddystone Encrypted Telemetry frame payload
                  type: string
                  format: byte
              required:
                - frame
      x-code-samples:
        - lang: cURL
          source: "curl -X \"POST\" \"https://api.kontakt.io/eddystone\"\n     -H 'Accept: application/vnd.com.kontakt+json;version=10'\n     -H 'Api-Key: yourSuperSecretAPIKey'\n     -H 'Content-Type: application/x-www-form-urlencoded; charset=utf-8'\n     --data-urlencode \"eid=4f5ed1e275696296\"\n     --data-urlencode \"frame=IAEoA+StYhATYJKB+yImIceN\""
        - lang: HTTP
          source: "POST /eddystone HTTP/1.1\nAccept: application/vnd.com.kontakt+json;version=10\nApi-Key: yourSuperSecretAPIKey\nContent-Type: application/x-www-form-urlencoded; charset=utf-8\nHost: api.kontakt.io\nConnection: close\nUser-Agent: Paw/3.1.8 (Macintosh; OS X/10.14.1) GCDHTTPRequest\nContent-Length: 46\n\nuniqueId=WsuvEU&frame=IAHTOq6kdACOlXubbP3mcJEe"
      responses:
        '200':
          description: OK
          content:
            'application/vnd.com.kontakt+json;version=10':
              schema:
                $ref: '#/components/schemas/EddystoneDecrypted'
  /firmware:
    get:
      tags:
        - Firmware
      summary: Get Firmwares
      description: Returns all Firmwares for specified beacons
      parameters:
        - name: uniqueId
          in: query
          description: List of Unique IDs of device for which Firmwares should be returned.
          required: true
          schema:
            type: array
            items:
              type: string
        - name: type
          in: query
          description: Filtering parameter that allows to return only scheduled or not scheduled Firmwares. If not specified, both types will be returned.
          required: false
          schema:
            type: string
            enum:
              - ALL
              - SCHEDULED
              - NONSCHEDULED
            default: ALL
      x-code-samples:
        - lang: cURL
          source: "curl \"https://api.kontakt.io/firmware?uniqueId=U4kb\"\n     -H 'Api-Key: yourSuperSecretAPIKey'\n     -H 'Accept: application/vnd.com.kontakt+json;version=10'"
        - lang: HTTP
          source: "GET /firmware?uniqueId=U4kb HTTP/1.1\nAccept: application/vnd.com.kontakt+json;version=10\nApi-Key: yourSuperSecretAPIKey\nHost: api.kontakt.io\nConnection: close\nUser-Agent: Paw/3.1.4 (Macintosh; OS X/10.13.3) GCDHTTPRequest"
      responses:
        '200':
          description: OK
          content:
            'application/vnd.com.kontakt+json;version=10':
              schema:
                type: object
                properties:
                  firmwares:
                    description: List of Firmwares
                    type: array
                    items:
                      $ref: '#/components/schemas/Firmware'
                  searchMeta:
                    $ref: '#/components/schemas/SearchMeta'
  /firmware/{firmwareVersion}:
    get:
      tags:
        - Firmware
      summary: Get a Firmware
      description: Returns a single Firmware version
      parameters:
        - name: firmwareVersion
          in: path
          description: Firmware version
          required: true
          schema:
            type: string
        - name: deviceType
          in: query
          description: Device type
          required: true
          schema:
            type: string
            enum:
              - BEACON
              - GATEWAY
      x-code-samples:
        - lang: cURL
          source: "curl \"https://api.kontakt.io/firmware/4.1?deviceType=BEACON\"\n     -H 'Api-Key: yourSuperSecretAPIKey'\n     -H 'Accept: application/vnd.com.kontakt+json;version=10'"
        - lang: HTTP
          source: "GET /firmware/4.1?deviceType=BEACON HTTP/1.1\nAccept: application/vnd.com.kontakt+json;version=10\nApi-Key: yourSuperSecretAPIKey\nHost: api.kontakt.io\nConnection: close\nUser-Agent: Paw/3.1.4 (Macintosh; OS X/10.13.3) GCDHTTPRequest"
      responses:
        '200':
          description: OK
          content:
            'application/vnd.com.kontakt+json;version=10':
              schema:
                $ref: '#/components/schemas/FirmwareCore'
  /firmware/{firmwareVersion}/file:
    get:
      tags:
        - Firmware
      summary: Get a Firmware file
      description: Redirects to a specific Firmware file
      parameters:
        - name: firmwareVersion
          in: path
          description: Firmware version
          required: true
          schema:
            type: string
        - name: deviceType
          in: query
          description: Device type
          required: true
          schema:
            type: string
            enum:
              - BEACON
              - GATEWAY
      x-code-samples:
        - lang: cURL
          source: "curl \"https://api.kontakt.io/firmware/4.1/file?deviceType=BEACON\"\n     -H 'Api-Key: yourSuperSecretAPIKey'\n     -H 'Accept: application/vnd.com.kontakt+json;version=10'"
        - lang: HTTP
          source: "GET /firmware/4.1/file?deviceType=BEACON HTTP/1.1\nAccept: application/vnd.com.kontakt+json;version=10\nApi-Key: yourSuperSecretAPIKey\nHost: api.kontakt.io\nConnection: close\nUser-Agent: Paw/3.1.4 (Macintosh; OS X/10.13.3) GCDHTTPRequest"
      responses:
        '303':
          description: See Other
  /gdpr/update:
    post:
      tags:
        - GDPR
      summary: Update consents
      description: This resource allows you to change your consents for receving marketing and product updates emails.
      requestBody:
        content:
          'application/x-www-form-urlencoded':
            schema:
              properties:
                marketingPurposes:
                  type: boolean
                  description: Indicates whether you want to receive marketing content
                technicalUpdates:
                  type: boolean
                  description: Indicates whether you want to receive updates about new product and/or feature releases
              required:
                - marketingPurposes
                - technicalUpdates
      x-code-samples:
        - lang: cURL
          source: "curl -X \"POST\" \"https://api.kontakt.io/gdpr/update\"\n     -H 'Api-Key: yourSuperSecretAPIKey'\n     -H 'Content-Type: application/x-www-form-urlencoded; charset=utf-8'\n     -H 'Accept: application/vnd.com.kontakt+json;version=10'\n     --data-urlencode \"marketingPurposes=false\"\n     --data-urlencode \"technicalUpdates=true\""
        - lang: HTTP
          source: "POST /gdpr/update HTTP/1.1\nAccept: application/vnd.com.kontakt+json;version=10\nApi-Key: yourSuperSecretAPIKey\nContent-Type: application/x-www-form-urlencoded; charset=utf-8\nHost: api.kontakt.io\nConnection: close\nUser-Agent: Paw/3.1.4 (Macintosh; OS X/10.13.4) GCDHTTPRequest\nContent-Length: 45\n\nmarketingPurposes=false&technicalUpdates=true"
      responses:
        '200':
          description: OK
          content:
            'application/vnd.com.kontakt+json; version=10':
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Success message
                    example: 'Update successful.'
        '422':
          description: Unprocessable Entity
          content: 
            'application/json':
              schema:
                $ref: '#/components/schemas/ApiError'
  /manager:
    get:
      tags: 
        - Manager
      summary: Get all Managers
      description: Returns a list Managers. It includes the Manager that has made this API request and all Subordinate Managers for that Manager.
      x-code-samples:
        - lang: cURL
          source: "curl \"https://api.kontakt.io/manager\"\n     -H 'Api-Key: yourSuperSecretAPIKey'\n     -H 'Accept: application/vnd.com.kontakt+json;version=10'"
        - lang: HTTP
          source: "GET /manager HTTP/1.1\nAccept: application/vnd.com.kontakt+json;version=10\nApi-Key: yourSuperSecretAPIKey\nHost: api.kontakt.io\nConnection: close\nUser-Agent: Paw/3.1.4 (Macintosh; OS X/10.13.3) GCDHTTPRequest"
      responses:
        '200':
          description: OK
          content:
            'application/vnd.com.kontakt+json;version=10':
              schema:
                type: object
                properties:
                  managers:
                    type: array
                    items:
                      allOf:
                        - $ref: '#/components/schemas/Manager'
                        - type: object
                          properties:
                            company:
                              description: Company that the Manager belongs to
                              $ref: '#/components/schemas/Company'
                  searchMeta:
                    $ref: '#/components/schemas/SearchMeta'
        '401':
          description: Unauthorized
  /manager/me:
    get:
      tags: 
        - Manager
      summary: Get current Manager
      description: Returns information about the Manager that has provided the API key for the API request
      x-code-samples:
        - lang: cURL
          source: "curl \"https://api.kontakt.io/manager/me\"\n     -H 'Api-Key: yourSuperSecretAPIKey'\n     -H 'Accept: application/vnd.com.kontakt+json;version=10'"
        - lang: HTTP
          source: "GET /manager/me HTTP/1.1\nAccept: application/vnd.com.kontakt+json;version=10\nApi-Key: yourSuperSecretAPIKey\nHost: api.kontakt.io\nConnection: close\nUser-Agent: Paw/3.1.4 (Macintosh; OS X/10.13.3) GCDHTTPRequest"
      responses:
        '200':
          description: OK
          content:
            'application/vnd.com.kontakt+json;version=10':
              schema:
                allOf:
                  - $ref: '#/components/schemas/Manager'
                  - type: object
                    properties:
                      company:
                        description: Company that the Manager belongs to
                        allOf:
                          - $ref: '#/components/schemas/Company'
                          - type: object
                            properties:
                              subscriptionPlans:
                                type: array
                                items:
                                  type: string
                                  enum:
                                    - LOCATION_ENGINE
                                    - MANAGEMENT
                                    - NONE
                                    - NOT_APPLICABLE
        '401':
          description: Unauthorized
  /manager/{managerId}:
    get:
      tags:
        - Manager
      summary: Get a Manager
      description: Get a single Manager by specifying an ID. It can be either the current Manager or one of Subordinate Managers.
      parameters:
        - name: managerId
          in: path
          description: ID of the Manager
          required: true
          schema:
            type: string
            format: UUID
      x-code-samples:
        - lang: cURL
          source: "curl \"https://api.kontakt.io/manager/954d3b28-4cf8-43ac-a59b-71d4f86fcb9e\"\n     -H 'Api-Key: yourSuperSecretAPIKey'\n     -H 'Accept: application/vnd.com.kontakt+json;version=10'"
        - lang: HTTP
          source: "GET /manager/954d3b28-4cf8-43ac-a59b-71d4f86fcb9e HTTP/1.1\nAccept: application/vnd.com.kontakt+json;version=10\nApi-Key: yourSuperSecretAPIKey\nHost: api.kontakt.io\nConnection: close\nUser-Agent: Paw/3.1.4 (Macintosh; OS X/10.13.3) GCDHTTPRequest"
      responses:
        '200':
          description: OK
          content:
            'application/vnd.com.kontakt+json;version=10':
              schema:
                $ref: '#/components/schemas/Manager'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ApiError'
  /manager/create:
    post:
      tags:
        - Manager
      summary: Create a Manager
      description: Creates a Subordiante Manager of type `ADMIN` or `OPERATOR` (if the current Manager is the Company's `SUPERUSER`), or just `OPERATOR` (if the current Manager is an `ADMIN`). If the current Manager is an `OPERATOR` he/she can't create Subordinate Managers.
      requestBody:
        content:
          'application/x-www-form-urlencoded':
            schema:
              properties:
                firstName:
                  description: New Manager's first name
                  type: string
                lastName:
                  description: New Manager's last name
                  type: string
                email:
                  description: New Manager's email
                  type: string
                  format: email
                role:
                  description: New Manager's role
                  type: string
                  enum:
                    - ADMIN
                    - OPERATOR
              required:
                - firstName
                - lastName
                - email
                - role
      x-code-samples:
        - lang: cURL
          source: "curl -X \"POST\" \"https://api.kontakt.io/manager/create\"\n     -H 'Api-Key: yourSuperSecretAPIKey'\n     -H 'Content-Type: application/x-www-form-urlencoded; charset=utf-8'\n     -H 'Accept: application/vnd.com.kontakt+json;version=10'\n     --data-urlencode \"firstName=Marty\"\n     --data-urlencode \"lastName=McHack\"\n     --data-urlencode \"email=marty.mchack@kontakt.io\"\n     --data-urlencode \"role=ADMIN\""
        - lang: HTTP
          source: "POST /manager/create HTTP/1.1\nAccept: application/vnd.com.kontakt+json;version=10\nApi-Key: yourSuperSecretAPIKey\nContent-Type: application/x-www-form-urlencoded; charset=utf-8\nHost: api.kontakt.io\nConnection: close\nUser-Agent: Paw/3.1.4 (Macintosh; OS X/10.13.3) GCDHTTPRequest\nContent-Length: 74\n\nfirstName=Marty&lastName=McHack&email=marty.mchack%40kontakt.io&role=ADMIN"
      responses:
        '201':
          description: Created
          content:
            'application/vnd.com.kontakt+json;version=10':
              schema:
                $ref: '#/components/schemas/Manager'
        '401':
          description: Unauthorized
        '422':
          description: Unprocessable Entity
          content: 
            'application/json':
              schema:
                $ref: '#/components/schemas/ApiError'
  /manager/update:
    post:
      tags:
        - Manager
      summary: Update a Manager
      description: This endpoint allows to update a Subordiante Manager account.
      requestBody:
        content:
          'application/x-www-form-urlencoded':
            schema:
              properties:
                managerId:
                  description: ID of a Manager that should be updated
                  type: string
                  format: UUID
                firstName:
                  description: New first name for a Manager
                  type: string
                lastName:
                  description: New last name for a Manager
                  type: string
                email:
                  description: New email for a Manager's account
                  type: string
                  format: email
                role:
                  description: New role for a Manager. This is available only for a Company's `SUPERUSER` since an `ADMIN` can only create an `OPERATOR`.
                  type: string
                  enum:
                    - ADMIN
                    - OPERATOR
              required:
                - managerId
      x-code-samples:
        - lang: cURL
          source: "curl -X \"POST\" \"https://api.kontakt.io/manager/update\"\n     -H 'Api-Key: yourSuperSecretAPIKey'\n     -H 'Content-Type: application/x-www-form-urlencoded; charset=utf-8'\n     -H 'Accept: application/vnd.com.kontakt+json;version=10'\n     --data-urlencode \"managerId=954d3b28-4cf8-43ac-b59b-71d4f86fcb9e\"\n     --data-urlencode \"email=new.email@domain.tld\""
        - lang: HTTP
          source: "POST /manager/update HTTP/1.1\nAccept: application/vnd.com.kontakt+json;version=10\nApi-Key: yourSuperSecretAPIKey\nContent-Type: application/x-www-form-urlencoded; charset=utf-8\nHost: api.kontakt.io\nConnection: close\nUser-Agent: Paw/3.1.4 (Macintosh; OS X/10.13.3) GCDHTTPRequest\nContent-Length: 75\n\nmanagerId=954d3b28-4cf8-43ac-b59b-71d4f86fcb9e&email=new.email%40domain.tld"
      responses:
        '200':
          description: OK
          content:
            'application/vnd.com.kontakt+json; version=10':
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Success message
                    example: 'Update successful.'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
          content: 
            'application/json':
              schema:
                $ref: '#/components/schemas/ApiError'
        '422':
          description: Unprocessable Entity
          content: 
            'application/json':
              schema:
                $ref: '#/components/schemas/ApiError'
  /alert:
    get:
      tags:
        - Monitoring
      summary: Get Alerts configuration
      description: Returns a list of Beacon Health Alerts and their configurations. This list can be filtered by providing any number of query paremeters specified below. However, the `uniqueId` and `venueId` parameters are mutually exclusive, and one of them has to be used.
      parameters:
        - name: uniqueId
          in: query
          description: List of Beacon Unique IDs. Only Beacon Health Alerts for beacons from that list will be returned. Can't be used when `venueId` is specified.
          required: false
          schema:
            type: array
            items:
              type: string
        - name: venueId
          in: query
          description: List of Venue (Location) IDs. Only Beacon Health Alerts for beacons assigned to Venues (Locations) from that list will be returned. Can't be used when `uniqueId` is specified.
          required: false
          schema:
            type: array
            items:
              type: string
              format: uuid
        - name: type
          in: query
          description: Alert type. Only Beacon Health Alerts with a specified type will be returned.
          required: false
          schema:
            type: string
            enum:
              - WARNING
              - ERROR
        - name: sendPolicy
          in: query
          description: Frequency of an Alert. Only Beacon Health Alerts with a specified frequency will be returned.
          required: false
          schema:
            type: string
            enum:
              - ONCE
              - ONCE_A_MINUTE
              - ONCE_AN_HOUR
              - ONCE_A_DAY
              - ONCE_A_WEEK
              - OFF
      x-code-samples:
        - lang: cURL
          source: 🚧 TODO 🚧
        - lang: HTTP
          source: 🚧 TODO 🚧
      responses:
        '200':
          description: OK
          content:
            'application/vnd.com.kontakt+json;version=10':
              schema:
                type: object
                properties:
                  alerts:
                    type: array
                    items:
                      $ref: '#/components/schemas/Alert'
                  searchMeta:
                    $ref: '#/components/schemas/SearchMeta'
  /alert/update:
    post:
      tags:
        - Monitoring
      summary: Update Alerts
      description: This endpoint allows to updates Beacon Health Alerts for individual beacons or group of beacons assigned to specified Venues (Locations).
      requestBody:
        content:
          'application/x-www-form-urlencoded':
            schema:
              oneOf:
                - $ref: '#/components/schemas/AlertUpdateUniqueID'
                - $ref: '#/components/schemas/AlertUpdateVenueID'
      x-code-samples:
        - lang: cURL
          source: 🚧 TODO 🚧
        - lang: HTTP
          source: 🚧 TODO 🚧
      responses:
        '200':
          description: OK
          content:
            'application/vnd.com.kontakt+json; version=10':
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Success message
                    example: 'Update successful.'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
          content: 
            'application/json':
              schema:
                $ref: '#/components/schemas/ApiError'
        '422':
          description: Unprocessable Entity
          content: 
            'application/json':
              schema:
                $ref: '#/components/schemas/ApiError'
  /namespaces:
    get:
      tags:
        - Namespaces
      summary: Get Namespaces
      description: Returns a list of Eddystone UID Namespaces broadcasted by beacons assigned to the current Manager and his/her Subordinate Managers.
      parameters:
        - name: namespace
          in: query
          description: List of Eddystone UID Namespaces (non-Secure). Response will contain only Namespaces from this list.
          required: false
          schema:
            type: array
            items:
              type: string
      x-code-samples:
        - lang: cURL
          source: "curl \"https://api.kontakt.io/namespaces\"\n     -H 'Api-Key: yourSuperSecretAPIKey'\n     -H 'Accept: application/vnd.com.kontakt+json;version=10'"
        - lang: HTTP
          source: "GET /namespaces HTTP/1.1\nAccept: application/vnd.com.kontakt+json;version=10\nApi-Key: yourSuperSecretAPIKey\nHost: api.kontakt.io\nConnection: close\nUser-Agent: Paw/3.1.4 (Macintosh; OS X/10.13.3) GCDHTTPRequest"
      responses:
        '200':
          description: OK
          content:
            'application/vnd.com.kontakt+json;version=10':
              schema:
                type: object
                properties:
                  namespaces:
                    type: array
                    items:
                      type: object
                      properties:
                        namespace:
                          type: string
                          description: Eddystone UID Namespace set by a Manager of a beacon.
                        secureNamespace:
                          type: string
                          description: Secure Eddystone UID Namespace advertised by a beacon. Same as `proximity` if a beacon is not shuffled.
                        shuffled:
                          type: boolean
                          description: Flag indicating whether `secureNamespace` is a shuffled Eddystone UID Namespace.
                        shared:
                          type: boolean
                          description: Flag indicating whether `namespace` comes from a shared beacon.
                  searchMeta:
                    $ref: '#/components/schemas/SearchMeta'
  /order:
    get:
      tags:
        - Order
      summary: Check Order IDs
      description: Returns a list of all **unassigned** devices (specifically, their Unique IDs) from Order IDs provided in the request parameter
      parameters:
        - name: orderId
          in: query
          description: List of Order IDs to be checked
          required: true
          schema:
            type: array
            items:
              type: string
              description: Order ID
      x-code-samples:
        - lang: cURL
          source: "curl \"https://api.kontakt.io/order?orderId=123dfg\"\n     -H 'Api-Key: yourSuperSecretAPIKey'\n     -H 'Accept: application/vnd.com.kontakt+json;version=10'"
        - lang: HTTP
          source: "GET /order?orderId=123dfg HTTP/1.1\nAccept: application/vnd.com.kontakt+json;version=10\nApi-Key: yourSuperSecretAPIKey\nHost: api.kontakt.io\nConnection: close\nUser-Agent: Paw/3.1.4 (Macintosh; OS X/10.13.2) GCDHTTPRequest"
      responses:
        '200':
          description: OK
          content:
            'application/vnd.com.kontakt+json;version=10':
              schema:
                type: array
                description: List of Unique IDs of devices that are associated with provided Order IDs
                items:
                  type: string
                  description: Unique ID
  /order/assign:
    post:
      tags:
        - Order
      summary: Assign Order IDs to an account
      description: |
        This endpoint adds all **unassigned** devices from specified Order IDs to an account from where the API key comes from
        
        Please keep in mind **this operation is irreversible** - once an Order ID has been used, it's no longer valid. Devices that were associated with that Order ID are assigned to a Manager and only that Manager can move/reassign them to different Manager by using either `POST /device/move` or `POST /device/assign` endpoints.
      requestBody:
        content:
          'application/x-www-form-urlencoded':
            schema:
              properties:
                orderId:
                  description: List of Order IDs that should be added to an account
                  type: array
                  items:
                    type: string
                    description: Order ID
              required:
                - orderId
      x-code-samples:
        - lang: cURL
          source: "curl -X \"POST\" \"https://api.kontakt.io/order/assign\"\n     -H 'Api-Key: yourSuperSecretAPIKey'\n     -H 'Content-Type: application/x-www-form-urlencoded; charset=utf-8'\n     -H 'Accept: application/vnd.com.kontakt+json;version=10'\n     --data-urlencode \"orderId=aaabbb,123dfg\""
        - lang: HTTP
          source: "POST /order/assign HTTP/1.1\nAccept: application/vnd.com.kontakt+json;version=10\nApi-Key: yourSuperSecretAPIKey\nContent-Type: application/x-www-form-urlencoded; charset=utf-8\nHost: api.kontakt.io\nConnection: close\nUser-Agent: Paw/3.1.4 (Macintosh; OS X/10.13.2) GCDHTTPRequest\nContent-Length: 23\n\norderId=aaabbb%2C123dfg"
      responses:
        '200':
          description: OK
          content:
            'application/vnd.com.kontakt+json;version=10':
              schema:
                type: object
                properties:
                  addedDevices:
                    type: number
                    description: Number of devices that has been added to an account
  /proximities:
    get:
      tags:
        - Proximities
      summary: Get Proximity UUIDs
      description: Returns a list of iBeacon Proximity UUIDs broadcasted by beacons assigned to the current Manager and his/her Subordinate Managers.
      parameters:
        - name: proximity
          in: query
          description: List of iBeacon Proximity UUIDs (non-Secure). Response will contain only Proximity UUIDs from this list.
          required: false
          schema:
            type: array
            items:
              type: string
              format: uuid
      x-code-samples:
        - lang: cURL
          source: "curl \"https://api.kontakt.io/proximities\"\n     -H 'Api-Key: yourSuperSecretAPIKey'\n     -H 'Accept: application/vnd.com.kontakt+json;version=10'"
        - lang: HTTP
          source: "GET /proximities HTTP/1.1\nAccept: application/vnd.com.kontakt+json;version=10\nApi-Key: yourSuperSecretAPIKey\nHost: api.kontakt.io\nConnection: close\nUser-Agent: Paw/3.1.4 (Macintosh; OS X/10.13.3) GCDHTTPRequest"
      responses:
        '200':
          description: OK
          content:
            'application/vnd.com.kontakt+json;version=10':
              schema:
                type: object
                properties:
                  proximities:
                    type: array
                    items:
                      type: object
                      properties:
                        proximity:
                          type: string
                          format: uuid
                          description: iBeacon Proximity UUID set by a Manager of a beacon.
                        secureProximity:
                          type: string
                          format: uuid
                          description: Secure iBeacon Proximity UUID advertised by a beacon. Same as `proximity` if a beacon is not shuffled.
                        shuffled:
                          type: boolean
                          description: Flag indicating whether `secureProximity` is a shuffled iBeacon Proximity UUID.
                        shared:
                          type: boolean
                          description: Flag indicating whether `proximity` comes from a shared beacon.
                  searchMeta:
                    $ref: '#/components/schemas/SearchMeta'
  /trigger:
    get:
      tags:
        - Trigger
      summary: Get Triggers
      description: Return either all existing Triggers, or only those specified in the `triggerId` and/or filtering query
      parameters:
        - name: triggerId
          in: query
          description: Trigger IDs
          required: false
          schema:
            type: array
            items:
              type: string
              format: UUID
        - $ref: '#/components/parameters/Query'
        - $ref: '#/components/parameters/MaxResult'
        - $ref: '#/components/parameters/QueryType'
      x-code-samples:
        - lang: cURL
          source: "curl \"https://api.kontakt.io/trigger?q=context.proximity%3D%3DNEAR\"\n     -H 'Api-Key: yourSuperSecretAPIKey'\n     -H 'Accept: application/vnd.com.kontakt+json;version=10'"
        - lang: HTTP
          source: "GET /trigger?q=context.proximity%3D%3DNEAR HTTP/1.1\nAccept: application/vnd.com.kontakt+json;version=10\nApi-Key: yourSuperSecretAPIKey\nHost: api.kontakt.io\nConnection: close\nUser-Agent: Paw/3.1.4 (Macintosh; OS X/10.13.3) GCDHTTPRequest"
      responses:
        '200':
          description: OK
          content:
            'application/vnd.com.kontakt+json;version=10':
              schema:
                type: object
                properties:
                  triggers:
                    type: array
                    items:
                      $ref: '#/components/schemas/Trigger'
                  searchMeta:
                    $ref: '#/components/schemas/SearchMeta'
  /trigger/create:
    post:
      tags:
        - Trigger
      summary: Create a Trigger
      description: Create a new Trigger
      requestBody:
        content:
          'application/x-www-form-urlencoded':
            schema:
              $ref: '#/components/schemas/NewUpdatedTrigger'
              required:
                - name
                - type
                - executor
      x-code-samples:
        - lang: cURL
          source: "curl -X \"POST\" \"https://api.kontakt.io/trigger/create\"\n     -H 'Api-Key: yourSuperSecretAPIKey'\n     -H 'Content-Type: application/x-www-form-urlencoded; charset=utf-8'\n     -H 'Accept: application/vnd.com.kontakt+json;version=10'\n     --data-urlencode \"context.major=134\"\n     --data-urlencode \"context.proximityUUID=f7826da6-4fa2-4e98-8024-bc5b71e0893e\"\n     --data-urlencode \"name=Trigger 134\"\n     --data-urlencode \"type=BEACON_LOST\"\n     --data-urlencode \"executor=CLOUD\""
        - lang: HTTP
          source: "POST /trigger/create HTTP/1.1\nAccept: application/vnd.com.kontakt+json;version=10\nApi-Key: yourSuperSecretAPIKey\nContent-Type: application/x-www-form-urlencoded; charset=utf-8\nHost: api.kontakt.io\nConnection: close\nUser-Agent: Paw/3.1.4 (Macintosh; OS X/10.13.3) GCDHTTPRequest\nContent-Length: 125\n\nname=Trigger+134&type=BEACON_LOST&executor=CLOUD&context.proximityUUID=f7826da6-4fa2-4e98-8024-bc5b71e0893e&context.major=134"
      responses:
        '201':
          description: Created
          content:
            'application/vnd.com.kontakt+json; version=10':
              schema:
                $ref: '#/components/schemas/Trigger'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
          content: 
            'application/json':
              schema:
                $ref: '#/components/schemas/ApiError'
        '409':
          description: Conflict
          content: 
            'application/json':
              schema:
                $ref: '#/components/schemas/ApiError'
        '422':
          description: Unprocessable Entity
          content: 
            'application/json':
              schema:
                $ref: '#/components/schemas/ApiError'
  /trigger/update:
    post:
      tags:
        - Trigger
      summary: Update a Trigger
      description: Allows to change some or all parameters of a single Trigger
      requestBody:
        content:
          'application/x-www-form-urlencoded':
            schema:
              allOf:
                - type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                      description: Trigger ID
                - $ref: '#/components/schemas/NewUpdatedTrigger'
              required:
                - id
      x-code-samples:
        - lang: cURL
          source: "curl -X \"POST\" \"https://api.kontakt.io/trigger/update\"\n     -H 'Api-Key: yourSuperSecretAPIKey'\n     -H 'Content-Type: application/x-www-form-urlencoded; charset=utf-8'\n     -H 'Accept: application/vnd.com.kontakt+json;version=10'\n     --data-urlencode \"name=Test 2222\"\n     --data-urlencode \"context.major=2222\"\n     --data-urlencode \"triggerId=bb54b2f5-b0bd-46b9-8b5c-52d8bd3f4c6b\""
        - lang: HTTP
          source: "POST /trigger/update HTTP/1.1\nAccept: application/vnd.com.kontakt+json;version=10\nApi-Key: yourSuperSecretAPIKey\nContent-Type: application/x-www-form-urlencoded; charset=utf-8\nHost: api.kontakt.io\nConnection: close\nUser-Agent: Paw/3.1.4 (Macintosh; OS X/10.13.3) GCDHTTPRequest\nContent-Length: 80\n\ntriggerId=bb54b2f5-b0bd-46b9-8b5c-52d8bd3f4c6b&name=Test+2222&context.major=2222"
      responses:
        '200':
          description: OK
          content:
            'application/vnd.com.kontakt+json; version=10':
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Success message
                    example: 'Update successful.'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
          content: 
            'application/json':
              schema:
                $ref: '#/components/schemas/ApiError'
        '422':
          description: Unprocessable Entity
          content: 
            'application/json':
              schema:
                $ref: '#/components/schemas/ApiError'
  /trigger/delete:
    post:
      tags:
        - Trigger
      summary: Delete a Trigger
      description: Delete a single Trigger
      requestBody:
        content:
          'application/x-www-form-urlencoded':
            schema:
              properties:
                triggerId:
                  type: string
                  format: uuid
                  description: ID of a Trigger that should be deleted
              required:
                - triggerId
      x-code-samples:
        - lang: cURL
          source: "curl -X \"POST\" \"https://api.kontakt.io/trigger/delete\"\n     -H 'Api-Key: yourSuperSecretAPIKey'\n     -H 'Content-Type: application/x-www-form-urlencoded; charset=utf-8'\n     -H 'Accept: application/vnd.com.kontakt+json;version=10'\n     --data-urlencode \"triggerId=bb54b2f5-b0bd-46b9-8b5c-52d8bd3f4c6b\""
        - lang: HTTP
          source: "POST /trigger/delete HTTP/1.1\nAccept: application/vnd.com.kontakt+json;version=10\nApi-Key: yourSuperSecretAPIKey\nContent-Type: application/x-www-form-urlencoded; charset=utf-8\nHost: api.kontakt.io\nConnection: close\nUser-Agent: Paw/3.1.4 (Macintosh; OS X/10.13.3) GCDHTTPRequest\nContent-Length: 46\n\ntriggerId=bb54b2f5-b0bd-46b9-8b5c-52d8bd3f4c6b"
      responses:
        '200':
          description: OK
          content:
            'application/vnd.com.kontakt+json; version=10':
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Success message
                    example: 'Delete successful.'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
          content: 
            'application/json':
              schema:
                $ref: '#/components/schemas/ApiError'
        '422':
          description: Unprocessable Entity
          content: 
            'application/json':
              schema:
                $ref: '#/components/schemas/ApiError'
  /venue:
    get:
      tags:
        - Venue
      summary: Get Venues
      description: Returns all Venues belonging to a specified Manager or all Venues with a given access type. If no parameters are provided, it lists all Venues that a Manager has access to.
      parameters:
        - name: managerId
          in: query
          description: Manager ID
          required: false
          schema:
            type: string
            format: uuid
        - name: access
          in: query
          description: Type of access to a Venue
          required: false
          schema:
            type: string
            enum:
              - OWNER
              - SUPERVISOR
              - VIEWER
        - $ref: '#/components/parameters/MaxResult'
        - $ref: '#/components/parameters/QueryType'
      x-code-samples:
        - lang: cURL
          source: "curl \"https://api.kontakt.io/venue?access=SUPERVISOR\"\n     -H 'Api-Key: yourSuperSecretAPIKey'\n     -H 'Accept: application/vnd.com.kontakt+json;version=10'"
        - lang: HTTP
          source: "GET /venue?access=OWNER HTTP/1.1\nAccept: application/vnd.com.kontakt+json;version=10\nApi-Key: yourSuperSecretAPIKey\nHost: api.kontakt.io\nConnection: close\nUser-Agent: Paw/3.1.4 (Macintosh; OS X/10.13.2) GCDHTTPRequest"
      responses:
        '200':
          description: OK
          content:
            'application/vnd.com.kontakt+json;version=10':
              schema:
                type: object
                properties:
                  venues:
                    type: array
                    items:
                      $ref: '#/components/schemas/Venue'
                  searchMeta:
                    $ref: '#/components/schemas/SearchMeta'
        '422':
          description: Unprocessable Entity
          content: 
            'application/json':
              schema:
                $ref: '#/components/schemas/ApiError'
  /venue/create:
    post:
      tags:
        - Venue
      summary: Create a Venue
      description: Create a new Venue on Manager's account
      requestBody:
        content:
          'application/x-www-form-urlencoded':
            schema:
              allOf:
                - $ref: '#/components/schemas/NewUpdatedVenue'
              required:
                - name
                - description
      x-code-samples:
        - lang: cURL
          source: "curl -X \"POST\" \"https://api.kontakt.io/venue/create\"\n     -H 'Api-Key: yourSuperSecretAPIKey'\n     -H 'Content-Type: application/x-www-form-urlencoded; charset=utf-8'\n     -H 'Accept: application/vnd.com.kontakt+json;version=10'\n     --data-urlencode \"lng=19.9828461\"\n     --data-urlencode \"lat=50.0509714\"\n     --data-urlencode \"name=Kontakt.io HQ\"\n     --data-urlencode \"description=Where Beacons are made\""
        - lang: HTTP
          source: "POST /venue/create HTTP/1.1\nAccept: application/vnd.com.kontakt+json;version=10\nApi-Key: yourSuperSecretAPIKey\nContent-Type: application/x-www-form-urlencoded; charset=utf-8\nHost: api.kontakt.io\nConnection: close\nUser-Agent: Paw/3.1.4 (Macintosh; OS X/10.13.2) GCDHTTPRequest\nContent-Length: 83\n\nname=Kontakt.io+HQ&description=Where+Beacons+are+made&lat=50.0509714&lng=19.9828461"
      responses:
        '201':
          description: Created
          content:
            'application/vnd.com.kontakt+json;version=10':
              schema:
                $ref: '#/components/schemas/Venue'
        '401':
          description: Unauthorized
        '422':
          description: Unprocessable Entity
          content: 
            'application/json':
              schema:
                $ref: '#/components/schemas/ApiError'
  /venue/update:
    post:
      tags:
        - Venue
      summary: Update a Venue
      description: Updates an existing Venue
      requestBody:
        content:
          'application/x-www-form-urlencoded':
            schema:
              allOf:
                - type: object
                  properties:
                    venueId:
                      description: ID of a Venue that should be updated
                      type: string
                      format: UUID
                - $ref: '#/components/schemas/NewUpdatedVenue'
              required:
                - venueId
      x-code-samples:
        - lang: cURL
          source: "curl -X \"POST\" \"https://api.kontakt.io/venue/update\"\n     -H 'Api-Key: yourSuperSecretAPIKey'\n     -H 'Content-Type: application/x-www-form-urlencoded; charset=utf-8'\n     -H 'Accept: application/vnd.com.kontakt+json;version=10'\n     --data-urlencode \"venueId=fc856d3e-ce74-4330-9f17-cf9cbdddcc55\"\n     --data-urlencode \"metadata.buildingType=office\"\n     --data-urlencode \"metadata.access=restricted\"\n     --data-urlencode \"description=Where the best Beacons are made\""
        - lang: HTTP
          source: "POST /venue/update HTTP/1.1\nAccept: application/vnd.com.kontakt+json;version=10\nApi-Key: yourSuperSecretAPIKey\nContent-Type: application/x-www-form-urlencoded; charset=utf-8\nHost: api.kontakt.io\nConnection: close\nUser-Agent: Paw/3.1.4 (Macintosh; OS X/10.13.2) GCDHTTPRequest\nContent-Length: 144\n\nvenueId=fc856d3e-ce74-4330-9f17-cf9cbdddcc55&description=Where+the+best+Beacons+are+made&metadata.buildingType=office&metadata.access=restricted"
      responses:
        '200':
          description: OK
          content:
            'application/vnd.com.kontakt+json; version=10':
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Success message
                    example: 'Update successful.'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
          content: 
            'application/json':
              schema:
                $ref: '#/components/schemas/ApiError'
        '422':
          description: Unprocessable Entity
          content: 
            'application/json':
              schema:
                $ref: '#/components/schemas/ApiError'
  /venue/delete:
    post:
      tags:
        - Venue
      summary: Delete a Venue
      description: Delete a single Venue. This operation does not affect Devices assigned to this Venue in other way than just making them not assigned to any Venue.
      requestBody:
        content:
          'application/x-www-form-urlencoded':
            schema:
              properties:
                venueId:
                  description: ID of a Venue that should be deleted
                  type: string
                  format: UUID
              required:
                - venueId
      x-code-samples:
        - lang: cURL
          source: "curl -X \"POST\" \"https://api.kontakt.io/venue/delete\"\n     -H 'Api-Key: yourSuperSecretAPIKey'\n     -H 'Content-Type: application/x-www-form-urlencoded; charset=utf-8'\n     -H 'Accept: application/vnd.com.kontakt+json;version=10'\n     --data-urlencode \"venueId=fc856d3e-ce74-4330-9f17-cf9cbdddcc55\""
        - lang: HTTP
          source: "POST /venue/delete HTTP/1.1\nAccept: application/vnd.com.kontakt+json;version=10\nApi-Key: yourSuperSecretAPIKey\nContent-Type: application/x-www-form-urlencoded; charset=utf-8\nHost: api.kontakt.io\nConnection: close\nUser-Agent: Paw/3.1.4 (Macintosh; OS X/10.13.2) GCDHTTPRequest\nContent-Length: 44\n\nvenueId=fc856d3e-ce74-4330-9f17-cf9cbdddcc55"
      responses:
        '200':
          description: OK
          content:
            'application/vnd.com.kontakt+json; version=10':
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Success message
                    example: 'Delete successful.'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
          content: 
            'application/json':
              schema:
                $ref: '#/components/schemas/ApiError'
        '422':
          description: Unprocessable Entity
          content: 
            'application/json':
              schema:
                $ref: '#/components/schemas/ApiError'
  /venue/share:
    post:
      tags:
        - Venue
      summary: Share Venues
      description: Shares specified Venues (Locations) and Devices assigned to them with another Manager. All changes made to the Venue by its Owner, including adding and removing Devices from it, will be automatically reflected in the Shared Venue.
      requestBody:
        content:
          'application/x-www-form-urlencoded':
            schema:
              properties:
                venueId:
                  description: List of IDs of Venues (Locations) that should be shared
                  type: array
                  items:
                    type: string
                    format: UUID
                managerMail:
                  description: List of emails of Managers that Venues (Locations) should be shared with
                  type: array
                  items:
                    type: string
                    format: email
                access:
                  description: Type of access that a receiving Managers should have to Devices assigned to the shared Venues (Locations). The only possible option at the moment is `VIEWER`.
                  type: string
                  enum:
                    - VIEWER
                expirationDate:
                  description: Unix epoch timestamp with an optional date when the access to a Venues (Locations) will be revoked. If not specified then Venues (Locations) will be share indefinitely.
                  type: integer
                withMetadata:
                  description: Flag indicationg whether Venues' metadata should also be shared (`true`) or not (`false`).
                  type: boolean
                  default: false
              required:
                - venueId
                - access
                - managerMail
      x-code-samples:
        - lang: cURL
          source: "curl -X \"POST\" \"https://api.kontakt.io/venue/share\"\n     -H 'Api-Key: yourSuperSecretAPIKey'\n     -H 'Content-Type: application/x-www-form-urlencoded; charset=utf-8'\n     -H 'Accept: application/vnd.com.kontakt+json;version=10'\n     --data-urlencode \"venueId=fc856d3e-ce74-4330-9f17-cf9cbdddcc55\"\n     --data-urlencode \"access=VIEWER\"\n     --data-urlencode \"withMetadata=true\"\n     --data-urlencode \"managerMail=support@kontakt.io\""
        - lang: HTTP
          source: "POST /venue/share HTTP/1.1\nAccept: application/vnd.com.kontakt+json;version=10\nApi-Key: yourSuperSecretAPIKey\nContent-Type: application/x-www-form-urlencoded; charset=utf-8\nHost: api.kontakt.io\nConnection: close\nUser-Agent: Paw/3.1.4 (Macintosh; OS X/10.13.2) GCDHTTPRequest\nContent-Length: 116\n\nvenueId=fc856d3e-ce74-4330-9f17-cf9cbdddcc55&managerMail=support%40kontakt.io&withMetadata=true&access=VIEWER"
      responses:
        '200':
          description: OK
          content:
            'application/vnd.com.kontakt+json; version=10':
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Success message
                    example: 'Update successful.'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
          content: 
            'application/json':
              schema:
                $ref: '#/components/schemas/ApiError'
        '422':
          description: Unprocessable Entity
          content: 
            'application/json':
              schema:
                $ref: '#/components/schemas/ApiError'
  /venue/unshare:
    post:
      tags:
        - Venue
      summary: Unshare Venues
      description: Revokes access to specified Venues (Locations) and Devices assigned to them.
      requestBody:
        content:
          'application/x-www-form-urlencoded':
            schema:
              properties:
                venueId:
                  description: List of IDs of Venues (Locations) that should no longer be shared with specified Managers
                  type: array
                  items:
                    type: string
                    format: UUID
                managerMail:
                  description: List of emails of Managers who should have their access to Venues (Locations) revoked. If not specified, access will be revoked from all Manager who had access to specified Venues.
                  type: array
                  items:
                    type: string
                    format: email
              required:
                - venueId
      x-code-samples:
        - lang: cURL
          source: "curl -X \"POST\" \"https://api.kontakt.io/venue/unshare?managerMail=a.ziobro%2Bvst%40kontakt.io&venueId=fc856d3e-ce74-4330-9f17-cf9cbdddcc55\"\n     -H 'Api-Key: yourSuperSecretAPIKey'\n     -H 'Content-Type: application/x-www-form-urlencoded; charset=utf-8'\n     -H 'Accept: application/vnd.com.kontakt+json;version=10'\n     --data-urlencode \"venueId=ba6b38c9-330b-4ab2-90e4-9baa7bb5e5c8\"\n     --data-urlencode \"managerMail=support@kontakt.io\""
        - lang: HTTP
          source: "POST /venue/unshare?managerMail=a.ziobro%2Bvst%40kontakt.io&venueId=fc856d3e-ce74-4330-9f17-cf9cbdddcc55 HTTP/1.1\nAccept: application/vnd.com.kontakt+json;version=10\nApi-Key: yourSuperSecretAPIKey\nContent-Type: application/x-www-form-urlencoded; charset=utf-8\nHost: api.kontakt.io\nConnection: close\nUser-Agent: Paw/3.1.4 (Macintosh; OS X/10.13.2) GCDHTTPRequest\nContent-Length: 84\n\nvenueId=ba6b38c9-330b-4ab2-90e4-9baa7bb5e5c8&managerMail=support%40kontakt.io"
      responses:
        '200':
          description: OK
          content:
            'application/vnd.com.kontakt+json; version=10':
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Success message
                    example: 'Update successful.'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
          content: 
            'application/json':
              schema:
                $ref: '#/components/schemas/ApiError'
        '422':
          description: Unprocessable Entity
          content: 
            'application/json':
              schema:
                $ref: '#/components/schemas/ApiError'
components:
  parameters:
    LESourceID:
      in: query
      name: sourceId
      required: false
      description: List of IDs of Devices providing content for Data Streams (Receivers). In typical cases those will be Unique IDs of Kontakt.io Gateways. This parameter is mutually exclusive with `placeId` but one of them has to be specified.
      schema:
        type: array
        items:
          type: string
    LESourceIDRequired:
      in: query
      name: sourceId
      required: true
      description: List of IDs of Devices providing content for Data Streams (Receivers). In typical cases those will be Unique IDs of Kontakt.io Gateways GW16-2. This parameter is mutually exclusive with `placeId` but one of them has to be specified.
      schema:
        type: array
        items:
          type: string
    LEPlaceID:
      in: query
      name: placeId
      required: false
      description: ID of a Place where Devices providing content for Data Streams (Receivers) are assigned to. Response will contain data from all Receivers assigned to that Place. This parameter is mutually exclusive with `sourceId`. This parameter is mutually exclusive with `placeId` but one of them has to be specified.
      schema:
        type: string
    LEStartTimestamp:
      in: query
      name: startTimestamp
      required: false
      description: Start time for analytics. It has to be between now and maximum two weeks in the past. Can be represented either as a Unix epoch timestamp or an ISO 8601-formatted string. If not specified a time and date from two weeks ago will be used.
      schema:
        oneOf:
          - type: integer
          - type: string
            format: date-time
    LEEndTimestamp:
      in: query
      description: End time for analytics. It has to be between `startTimestamp` and the current time. Can be represented either as a Unix epoch timestamp or an ISO 8601-formatted string. If not specified a current time will be used.
      name: endTimestamp
      required: false
      schema:
        oneOf:
          - type: integer
          - type: string
            format: date-time
    LEInterval:
      in: query
      name: interval
      required: false
      description: Data aggregation interval
      schema:
        type: string
        enum:
          - S10
          - M1
          - M15
          - H1
        default: H1
    LEScanType:
      in: query
      name: scanType
      required: false
      description: Filters the response for data coming only from one type of radio. If not specified both types of scans will be included.
      schema:
        type: string
        enum:
          - BLE
          - WIFI
    LETrackingID:
      in: query
      name: trackingId
      required: false
      description: Limits the response only to devices with Tracking IDs specified in this parameter. If this parameter is omitted, all data is returned.
      schema:
        type: array
        items:
          type: string
    DeviceType:
      name: deviceType
      in: query
      description: Limits the response only to devices with a given type
      required: false
      schema:
        type: string
        enum:
          - BEACON
          - GATEWAY
          - EXTERNAL
    Profile:
      name: profile
      in: query
      description: Filters beacons that have their `profile` property set ot either `IBEACON` or `EDDYSTONE`. 
      required: false
      schema:
        type: string
        enum:
          - IBEACON
          - EDDYSTONE
    Query:
      in: query
      name: q
      required: false
      description: Filtering query
      schema:
        type: string
    QueryType:
      in: query
      name: queryType
      required: false
      description: |
        `COUNTED` returns a number of all items (not just on the current page) in the `searchMeta` object. `SEARCH_META` returns an empty list of items, but the `searchMeta` object contains the number of them.
      schema:
        type: string
        enum:
          - NORMAL
          - COUNTED
          - SEARCH_META
        default: NORMAL
    MaxResult:
      in: query
      name: maxResult
      required: false
      description: Maximum number of results
      schema:
        type: integer
        default: 500
  securitySchemes:
    api_key:
      type: apiKey
      name: Api-Key
      in: header
  schemas:
    ApiError:
      type: object
      title: API Error
      properties:
        id:
          type: string
          description: Internal API error code
        status:
          type: number
          description: HTTP response status code
        cause:
          type: string
          description: General cause of the error
        message:
          type: string
          description: Error message with an explanation of the problem
        details:
          type: array
          description: Optional details
          nullable: true
          items:
            type: object
            properties:
              field:
                type: string
              error:
                type: string
                description: Error name
              message:
                type: string
                description: Error message
    Activity:
      type: object
      properties:
        id:
          type: string
          format: UUID
          description: Activity ID
        name:
          type: string
          description: Activity name
        triggerId:
          type: array
          description: List of Triggers that the Activity should be associated to
          items:
            type: string
            format: UUID
            description: Trigger ID
        type:
          type: string
          description: Type of the Activity. At the moment the only supported type is a HTTP request.
          enum:
            - SEND_HTTP_REQUEST
        context:
          type: object
          description: Activity configuration
          properties:
            url:
              type: string
              description: An URL of a HTTP endpoint that should be called by the Activity
              format: url
            httpMethod:
              type: string
              description: HTTP method that should be used for Activity's HTTP request
              enum:
                - GET
                - POST
                - PUT
                - DELETE
            headers:
              type: object
              description: HTTP request headers
              properties:
                content-type:
                  type: string
                  description: Value for the `Content-Type` header for Activity's HTTP request. This header is **required** if Activity's `type` is set to `SEND_HTTP_REQUEST`.
                custom-header:
                  type: string
                  description: |
                    The name of this property represents a name of an additional header that should be used in Activity's HTTP request, e.g. `custom-header` with value `Custom value` will result in a header `Custom-Header: Custom value` being added to the HTTP request. Multiple custom headers are possible.
            params:
              description: HTTP request parameters
              type: object
              properties:
                custom-parameter:
                  type: string
                  description: The name of this property represents a name of an optional parameter that should be used in Activity's HTTP request. Multiple custom parameters are possible.
    NewUpdatedActivity:
      type: object
      title: New/Updated Activity
      properties:
        name:
          type: string
          description: Activity name
        triggerId:
          description: List of Triggers that the Activity should be associated to
          type: array
          items:
            description: Trigger ID
            type: string
            format: uuid
        type:
          description: Type of the Activity. At the moment the only supported type is a HTTP request.
          type: string
          enum:
            - SEND_HTTP_REQUEST
        context:
          type: object
          description: Activity configuration
          properties:
            url:
              type: string
              format: url
              description: An URL of a HTTP endpoint that should be called by the Activity
            httpMethod:
              description: HTTP method that should be used for Activity's HTTP request
              type: string
              enum:
                - GET
                - POST
                - PUT
                - DELETE
            headers:
              type: object
              description: HTTP request headers
              properties:
                content-type:
                  type: string
                  description: Value for the `Content-Type` header for Activity's HTTP request. This header is **required** if Activity's `type` is set to `SEND_HTTP_REQUEST`.
                custom-header:
                  type: string
                  description: |
                    The name of this property represents a name of an additional header that should be used in Activity's HTTP request, e.g. `custom-header` with value `Custom value` will result in a header `Custom-Header: Custom value` being added to the HTTP request. Multiple custom headers are allowed.
            params:
              description: HTTP request parameters
              type: object
              properties:
                custom-parameter:
                  type: string
                  description: The name of this property represents a name of an optional parameter that should be used in Activity's HTTP request. Multiple custom parameters are allowed.
    Alert:
      type: object
      properties:
        type:
          type: string
          description: Alert type
          enum:
            - WARNING
            - ERROR
        threshold:
          description: Battery level (%) that triggers a Beacon Health Alert
          type: integer
          minimum: 0
          maximum: 100
        recipients:
          description: List of emails where Beacon Health Alerts should be sent to
          type: array
          items:
            type: string
            format: email
            description: Email address
        sendPolicy:
          description: Email notification frequency. Decides whether an email should be sent at all, and if so, whether it should be sent only once or repeatedly, with specified frequency.
          type: string
          enum:
            - ONCE
            - ONCE_A_MINUTE
            - ONCE_AN_HOUR
            - ONCE_A_DAY
            - ONCE_A_WEEK
            - OFF
        uniqueId:
          description: List of Beacon Unique IDs that are associated with this Beacon Health Alert
          type: array
          nullable: true
          items:
            description: Beacon Unique ID
            type: string
        venueId:
          description: ???
          type: array
          nullable: true
          items:
            type: string
            format: uuid
    AlertUpdateUniqueID:
      title: Update for specific Unique IDs
      properties:
        uniqueId:
          description: List of Beacon Unique IDs that should be associated with this Beacon Health Alert
          type: array
          items:
            type: string
            description: Beacon Unique ID
        type:
          description: Alert type
          type: string
          enum:
            - WARNING
            - ERROR
        threshold:
          description: Battery level (%) that triggers a Beacon Health Alert
          type: integer
          minimum: 0
          maximum: 100
        recipients:
          description: List of emails where Beacon Health Alerts should be sent to
          type: array
          items:
            description: Email address
            type: string
            format: email
        sendPolicy:
          description: Email notification frequency. Decides whether an email should be sent at all, and if so, whether it should be sent only once or repeatedly, with specified frequency.
          type: string
          enum:
            - ONCE
            - ONCE_A_MINUTE
            - ONCE_AN_HOUR
            - ONCE_A_DAY
            - ONCE_A_WEEK
            - OFF
      required:
        - uniqueId
        - type
        - threshold
        - recipients
        - sendPolicy
    AlertUpdateVenueID:
      title: Update for specific Venue IDs
      properties:
        venueId:
          type: array
          items:
            type: string
            format: uuid
        type:
          description: Alert type
          type: string
          enum:
            - WARNING
            - ERROR
        threshold:
          description: Battery level (%) that triggers a Beacon Health Alert
          type: integer
          minimum: 0
          maximum: 100
        recipients:
          description: List of emails where Beacon Health Alerts should be sent to
          type: array
          items:
            description: Email address
            type: string
            format: email
        sendPolicy:
          description: Email notification frequency. Decides whether an email should be sent at all, and if so, whether it should be sent only once or repeatedly, with specified frequency.
          type: string
          enum:
            - ONCE
            - ONCE_A_MINUTE
            - ONCE_AN_HOUR
            - ONCE_A_DAY
            - ONCE_A_WEEK
            - OFF
      required:
        - venueId
        - type
        - threshold
        - recipients
        - sendPolicy
    AssignUniqueIdVenue:
      title: Assign to a Venue using Unique IDs
      properties:
        uniqueId:
          description: List of Device Unique IDs
          type: array
          items:
            type: string
        venueId:
          description: Venue (Location) ID
          type: string
          format: uuid
    AssignUniqueIdManager:
      title: Assign to a Manager using Unique IDs
      properties:
        uniqueId:
          description: List of Device Unique IDs
          type: array
          items:
            type: string
        managerId:
          description: Subordinate Manager ID
          type: string
          format: uuid
    AssignDeviceIdVenue:
      title: Assign to a Venue using API UUIDs
      properties:
        deviceId:
          description: List of Device UUIDs
          type: array
          items:
            type: string
            format: uuid
        venueId:
          description: Venue (Location) ID
          type: string
          format: uuid
    AssignDeviceIdManager:
      title: Assign to a Manager using API UUIDs
      properties:
        deviceId:
          description: List of Device UUIDs
          type: array
          items:
            type: string
            format: uuid
        managerId:
          description: Subordinate Manager ID
          type: string
          format: uuid
    Company:
      type: object
      properties:
        id:
          type: string
          format: UUID
        name:
          type: string
        uniqueId:
          type: string
        countryCode:
          type: string
          nullable: true
        paidFeatures:
          type: array
          items:
            type: string
    Config:
      type: object
      title: New Beacon Configuration
      discriminator:
        propertyName: model
        mapping:
          SMART_BEACON: '#/components/schemas/ConfigSmartBeacon'
          USB_BEACON: '#/components/schemas/ConfigUsbBeacon'
          BEACON_PRO: '#/components/schemas/ConfigBeaconPro'
          TAG_BEACON: '#/components/schemas/ConfigTagBeacon'
          CARD_BEACON: '#/components/schemas/ConfigCardBeacon'
          CARD_BEACON_2: '#/components/schemas/ConfigCardBeacon2'
          HEAVY_DUTY_BEACON: '#/components/schemas/ConfigHDBeacon'
          TOUGH_BEACON_2: '#/components/schemas/ConfigToughBeacon2'
          BRACELET_TAG: '#/components/schemas/ConfigBraceletTag'
          BRACELET_TAG_2: '#/components/schemas/ConfigBraceletTag2'
          UNIVERSAL_TAG: '#/components/schemas/ConfigUniversalTag'
          SMART_BEACON_3: '#/components/schemas/ConfigSmartBeacon3'
      properties:
        uniqueId:
          type: string
          description: Unique ID of a device
        name:
          type: string
          nullable: true
          description: Bluetooth name of a device
        model:
          description: Device model name
          type: string
          enum:
            - SMART_BEACON
            - USB_BEACON
            - BEACON_PRO
            - TAG_BEACON
            - CARD_BEACON
            - CARD_BEACON_2
            - HEAVY_DUTY_BEACON
            - TOUGH_BEACON_2
            - SMART_BEACON_3
            - BRACELET_TAG
    ConfigCore:
      type: object
      properties:
        profiles:
          type: array
          nullable: true
          description: List of beacon profiles Device should broadcast
          items:
            type: string
            enum:
              - IBEACON
              - EDDYSTONE
        packets:
          description: Beacon advertising packets that should be broadcasted by a device
          type: array
          nullable: true
          items:
            type: string
            enum:
              - IBEACON
              - EDDYSTONE_UID
              - EDDYSTONE_URL
              - EDDYSTONE_EID
              - EDDYSTONE_TLM
              - EDDYSTONE_ETLM
              - KONTAKT
              - KONTAKT_TLM
              - KONTAKT_LOCATION
              - BUTTON_IBEACON
        proximity:
          type: string
          nullable: true
          format: UUID
          description: New iBeacon Proximity UUID
        major:
          type: integer
          nullable: true
          format: uint16
          minimum: 0
          maximum: 65535
          description: New iBeacon Major
        minor:
          type: integer
          nullable: true
          format: uint16
          minimum: 0
          maximum: 65535
          description: New iBeacon Minor
        namespace:
          type: string
          nullable: true
          description: New Eddystone UID Namespace 
        instanceId:
          type: string
          nullable: true
          description: New Eddystone UID Instance ID
        url:
          type: string
          nullable: true
          description: New Eddystone URL address
        shuffled:
          type: boolean
          nullable: true
          description: Flag indicating whether a beacons should turn the Kontakt.io Secure Shuffling on (`true`) or of (`false`)
        rssi1m:
          type: array
          description: List of new Calibrated RSSI@1m values (iBeacon) for each TX power level the Device can use
          nullable: true
          items:
            type: integer
        rssi0m:
          type: array
          description: List of new Calibrated RSSI@0m values (Eddystone) for each TX power level the Device can use
          nullable: true
          items:
            type: integer
        password:
          type: string
          description: New access password for the Device
          nullable: true
        customConfiguration:
          type: string
          nullable: true
          description: Custom configuration parameters for special use-cases. If the solution prepared for you by Kontakt.io takes advantage of these properties, please get in touch with our Support Team for a proper documentation.
    ConfigAccelerometer:
      properties:
        accelerometer:
          type: object
          description: New accelerometer configuration
          properties:
            preset:
              description: Preset for Accelerometer configuration
              type: string
              enum:
                - MOVEMENT
                - FREE_FALL
                - DOUBLE_TAP
                - DOUBLE_TAP_AND_MOVEMENT
                - DOUBLE_TAP_AND_FREE_FALL
                - UNKNOWN
            features:
              description: List of Accelerometer features that will be enabled
              type: array
              items:
                type: string
                enum:
                  - ACCELEROMETER
                  - X_AXIS
                  - Y_AXIS
                  - Z_AXIS
                  - MOVE_DETECTION
                  - DOUBLE_TAP_DETECTION
              nullable: true
            sensitivity:
              description: Accelerometer sensitivity
              type: integer
              enum:
                - 16
                - 32
                - 64
                - 128
              nullable: true
            move:
              description: Movement detection parameters
              type: object
              properties:
                threshold:
                  description: Value (in m*g*) that an acceleration needs to exceeds in order to trigger movement detection
                  type: integer
                  nullable: true
                duration:
                  description: Time (in ms) than an acceleration needs to stay above threshold value in order to trigger movement detection
                  type: integer
                  nullable: true
                detectionFlags:
                  type: array
                  items:
                    type: string
                    enum:
                      - X_POSITIVE
                      - Y_POSITIVE
                      - Z_POSITIVE
                      - X_NEGATIVE
                      - Y_NEGATIVE
                      - Z_NEGATIVE
                  nullable: true
                detectionFlagsJunction:
                  type: string
                  enum:
                    - AND
                    - OR
                  nullable: true
            doubleTap:
              description: Double tap detection parameters
              type: object
              properties:
                threshold:
                  description: Value ( in m*g*) that an acceleration needs to exceeds in order to trigger movement detection
                  type: integer
                  nullable: true
                timeLimit:
                  description: Maximum duration (in ms) of a single tap
                  type: integer
                  nullable: true
                timeLatency:
                  description: Minimum time gap (in ms) between two taps
                  type: integer
                  nullable: true
                timeWindow:
                  description: Maximum duration (in ms) of the whole event
                  type: integer
                  nullable: true
                detectionFlags:
                  description: List of accelerometer axes that are monitored for doube tap events
                  type: array
                  items:
                    type: string
                    enum:
                      - X_AXIS
                      - Y_AXIS
                      - Z_AXIS
                  nullable: true
            highPass:
              description: High-pass filter parameters
              type: object
              properties:
                accelerometerData:
                  type: boolean
                  description: Flag indicating whether the high-pass fillter should be applied to raw accelerometer data
                  nullable: true
                moveDetection:
                  type: boolean
                  description: Flag indicating whether the high-pass fillter should be applied when movement detection is enabled
                  nullable: true
                doubleTapDetection:
                  type: boolean
                  description: Flag indicating whether the high-pass fillter should be applied when double tap detection is enabled
                  nullable: true
                mode:
                  description: High-pass filter mode
                  type: string
                  enum:
                    - NORMAL
                    - NORMAL_RESET
                    - AUTORESET
                    - REFERENCE
                  nullable: true
                cutOffFrequency:
                  description: High-pass filter cut-off frequency
                  type: number
                  enum:
                    - 0.05
                    - 0.1
                    - 0.2
                    - 0.5
                  nullable: true
                reference:
                  description: High-pass filter reference
                  type: integer
                  nullable: true
    ConfigPowerSaving:
      type: object
      properties:
        powerSaving:
          type: object
          description: New power saving configuration
          externalDocs:
            url: /hardware/powersaving/
            description: Power Saving on Developer Center
          properties:
            features:
              type: array
              items:
                type: string
                enum:
                  - LIGHT_SENSOR
                  - RTC
                  - MOTION_DETECTION
                  - BURST_MODE
              description: List of features that can trigger a power saving mode. Send empty list to disable Pawer Saving.
              nullable: true
            moveSuspendTimeout:
              nullable: true
              type: integer
              minimum: 60
              maximum: 3600
              description: Time (in seconds) after which a Card Tag CT16-2 engages power saving mode. Possible values are in range between 60 (1 minute) and 3600 (1 hour).
            powerSaverAdvertiseInterval:
              nullable: true
              type: integer
              description: Bluetooth Advertising interval that a Card Tag CT16-2 should use when in the Power Saving mode. Available only on Card Tags CT16-2 with firmware 4.2 or newer.
            rtc:
              nullable: true
              description: A list of object representing days of a week and hours during that day when a power saving mode should be engaged. Available only on Devices equipped with a Real-Time Clock (RTC).
              type: array
              items:
                type: object
                properties:
                  day:
                    type: string
                    enum:
                      - MON
                      - TUE
                      - WED
                      - THU
                      - FRI
                      - SAT
                      - SUN
                    description: Indicates a day of a week
                  hours:
                    type: array
                    items:
                      type: integer
                      minimum: 0
                      maximum: 23
                    description: List of hours (in UTC, using 24h clock) from a day specified in the `day` parameter, during which Power Saving should be enabled, e.g. 17 means Power Saving will be enabled from 17:00 until 17:59 UTC.
            lightSensorThreshold:
              nullable: true
              type: integer
              minimum: 0
              maximum: 100
              description: Threshold of ambient light intensity, expressed in percents, below which a Device enters the power saving mode. Applicable only to Devices equipped with a light sensor.
            lightSensorHysteresis:
              nullable: true
              type: integer
              description: Light sensor's [hysteresis](https://en.wikipedia.org/wiki/Hysteresis#In_engineering), expressed in percent points. More details in Power Saving guide. Applicable only to Devices equipped with a light sensor.
            burstOnTime:
              nullable: true
              type: integer
              minimum: 15
              maximum: 65535
              description: Number of *seconds* a beacon should broadcast when `BURST_MODE` is active
            burstOffTime:
              nullable: true
              type: integer
              minimum: 1
              maximum: 10080
              description: Number of *minutes* between each broadcasts when `BURST_MODE` is active
    ConfigButton:
      type: object
      description: Button configuration
      properties:
        buttonFeatures:
          description: Button functionality configuration
          nullable: true
        panicDuration:
          description: Number of seconds the `BUTTON_IBEACON` packet is broadcasted after a single button click
          nullable: true
    ConfigEid:
      type: object
      description: Eddystone-EID configuration
      properties:
        eidIdentityKey:
          description: Eddystone-EID Identity Key
          type: string
          nullable: true
        eidRotationPeriodExponent:
          description: Eddystone-EID rotation period exponent
          type: integer
          nullable: true
    ConfigSmartBeacon:
      type: object
      description: New Smart Beacon SB16-2 Config
      allOf:
        - $ref: '#/components/schemas/Config'
        - $ref: '#/components/schemas/ConfigCore'
        - type: object
          properties:
            interval:
              type: integer
              description: New beacon advertising interval in milliseconds.
              maximum: 10240
              minimum: 20
              nullable: true
            txPower:
              type: integer
              minimum: 0
              maximum: 7
              description: Bluetooth transmission power level
              nullable: true
    ConfigUsbBeacon:
      type: object
      description: New USB Beacon UB16-2 Config
      allOf:
        - $ref: '#/components/schemas/Config'
        - $ref: '#/components/schemas/ConfigCore'
        - type: object
          properties:
            interval:
              type: integer
              description: New beacon advertising interval in milliseconds.
              maximum: 10240
              minimum: 20
              nullable: true
            txPower:
              type: integer
              minimum: 0
              maximum: 7
              description: Bluetooth transmission power level
              nullable: true
    ConfigBeaconPro:
      type: object
      description: New Beacon Pro BP16-3 Config
      allOf:
        - $ref: '#/components/schemas/Config'
        - $ref: '#/components/schemas/ConfigCore'
        - $ref: '#/components/schemas/ConfigNRF52Common'
        - $ref: '#/components/schemas/ConfigEid'
        - $ref: '#/components/schemas/ConfigAccelerometer'
        - $ref: '#/components/schemas/ConfigPowerSaving'
    ConfigTagBeacon:
      type: object
      description: New Asset Tag S18-3 Config
      allOf:
        - $ref: '#/components/schemas/Config'
        - $ref: '#/components/schemas/ConfigCore'
        - $ref: '#/components/schemas/ConfigNRF52Common'
        - $ref: '#/components/schemas/ConfigButton'
        - $ref: '#/components/schemas/ConfigEid'
        - $ref: '#/components/schemas/ConfigAccelerometer'
        - $ref: '#/components/schemas/ConfigPowerSaving'
    ConfigCardBeacon:
      type: object
      description: New Card Tag CT16-2 Config
      allOf:
        - $ref: '#/components/schemas/Config'
        - $ref: '#/components/schemas/ConfigCore'
        - type: object
          properties:
            interval:
              type: integer
              description: New beacon advertising interval in milliseconds.
              maximum: 10240
              minimum: 20
              nullable: true
            txPower:
              type: integer
              enum:
                - 1
                - 6
              description: Bluetooth transmission power level
        - $ref: '#/components/schemas/ConfigPowerSaving'
    ConfigCardBeacon2:
      type: object
      description: New Card Tag CT18-3 Config
      allOf:
        - $ref: '#/components/schemas/Config'
        - $ref: '#/components/schemas/ConfigCore'
        - $ref: '#/components/schemas/ConfigNRF52Common'
        - $ref: '#/components/schemas/ConfigButton'
        - $ref: '#/components/schemas/ConfigEid'
        - $ref: '#/components/schemas/ConfigAccelerometer'
        - $ref: '#/components/schemas/ConfigPowerSaving'
    ConfigHDBeacon:
      type: object
      description: New Heavy Duty Beacon HD18-3 Config
      allOf:
        - $ref: '#/components/schemas/Config'
        - $ref: '#/components/schemas/ConfigCore'
        - $ref: '#/components/schemas/ConfigNRF52Common'
        - $ref: '#/components/schemas/ConfigEid'
        - $ref: '#/components/schemas/ConfigAccelerometer'
        - $ref: '#/components/schemas/ConfigPowerSaving'
    ConfigToughBeacon2:
      type: object
      description: New Tough Beacon HD18-2 Config
      allOf:
        - $ref: '#/components/schemas/Config'
        - $ref: '#/components/schemas/ConfigCore'
        - $ref: '#/components/schemas/ConfigNRF52Common'
        - $ref: '#/components/schemas/ConfigEid'
        - $ref: '#/components/schemas/ConfigAccelerometer'
        - $ref: '#/components/schemas/ConfigPowerSaving'
    ConfigSmartBeacon3:
      type: object
      description: New Tough Beacon HD18-2 Config
      allOf:
        - $ref: '#/components/schemas/Config'
        - $ref: '#/components/schemas/ConfigCore'
        - $ref: '#/components/schemas/ConfigNRF52Common'
        - $ref: '#/components/schemas/ConfigEid'
        - $ref: '#/components/schemas/ConfigAccelerometer'
        - $ref: '#/components/schemas/ConfigPowerSaving'
    ConfigBraceletTag:
      type: object
      description: New Bracelet Tag BT18-3 Config
      allOf:
        - $ref: '#/components/schemas/Config'
        - $ref: '#/components/schemas/ConfigCore'
        - $ref: '#/components/schemas/ConfigNRF52Common'
        - $ref: '#/components/schemas/ConfigButton'
        - $ref: '#/components/schemas/ConfigEid'
        - $ref: '#/components/schemas/ConfigAccelerometer'
        - $ref: '#/components/schemas/ConfigPowerSaving'
    ConfigBraceletTag2:
      type: object
      description: New Bracelet Tag BT19-4 Config
      allOf:
        - $ref: '#/components/schemas/Config'
        - $ref: '#/components/schemas/ConfigCore'
        - $ref: '#/components/schemas/ConfigNRF52Common'
        - $ref: '#/components/schemas/ConfigButton'
        - $ref: '#/components/schemas/ConfigEid'
        - $ref: '#/components/schemas/ConfigAccelerometer'
        - $ref: '#/components/schemas/ConfigPowerSaving'
    ConfigUniversalTag:
      type: object
      description: New Universal Tag UT19-1 Config
      allOf:
        - $ref: '#/components/schemas/Config'
        - $ref: '#/components/schemas/ConfigCore'
        - $ref: '#/components/schemas/ConfigNRF52Common'
        - $ref: '#/components/schemas/ConfigButton'
        - $ref: '#/components/schemas/ConfigEid'
        - $ref: '#/components/schemas/ConfigAccelerometer'
        - $ref: '#/components/schemas/ConfigPowerSaving'
    ConfigGateway:
      title: New Gateway GW16-2 Configuration
      type: object
      properties:
        uniqueId:
          type: string
          description: ID of a Gateway GW16-2
        applications:
          type: object
          description: Configuration for applications running on a Gateway GW16-2
          properties:
            system:
              type: object
              description: Configuration for system-level applications
              properties:
                wifiSsid:
                  type: string
                  description: Name of the WiFi network a Gateway GW16-2 should connect to
                wifiProtocol:
                  type: string
                  description: WiFi authentication protocol that a Gateway GW16-2 should use
                  enum:
                    - WPA_PSK
                    - WPA_EAP
                wifiUserName:
                  type: string
                  description: When `wifiProtocol` is set to `WPA_EAP` this is a PEAP MSCHAPv2 username that a Gateway GW16-2 will use when connecting to WiFi
    ConfigEncrypted:
      title: Encrypted Config/Command
      type: object
      properties:
        uniqueId:
          type: string
          description: Unique ID of the device that can consume this Encrypted Config/Command. 
        config:
          type: string
          format: byte
          description: Base64-encoded data with a new Config/Command for a Device with an Unique ID specified in the `uniqueId` field.
    ConfigNRF52Common:
      properties:
        txPower:
          type: integer
          minimum: 1
          maximum: 7
          description: Bluetooth transmission power level
          nullable: true
        interval:
          type: integer
          minimum: 100
          maximum: 10240
          description: Advertising interval in milliseconds for iBeacon and Eddystone packets
          nullable: true
        kontaktFrameInterval:
          type: integer
          minimum: 20
          maximum: 10240
          description: Advertising interval in milliseconds for Kontakt.io Secure Profile packet
          nullable: true
        telemetryInterval:
          type: integer
          nullable: true
          minimum: 20
          maximum: 10240
          description: Advertising interval in milliseconds for Kontakt.io Telemetry packet
        locationFrameInterval:
          type: integer
          nullable: true
          minimum: 100
          maximum: 10240
          description: Advertising interval in milliseconds for Kontakt.io Location packet
        telemetryFields:
          type: array
          items:
            type: string
            enum:
              - RAW_ACCELEROMETER
              - MOVEMENT_THRESHOLD_EVENT
              - DOUBLE_TAP_EVENT
              - LIGHT_LEVEL
              - TEMPERATURE
              - BATTERY
              - BUTTON_CLICK
              - IDENTIFIED_BUTTON_CLICK
              - UTC_TIME
              - HUMIDITY
              - TEMPERATURE_16_BITS
              - MOVEMENT_EVENT
          description: Content of the Kontakt.io Telemetry packet
          externalDocs:
            url: /hardware/packets/telemetry/
            description: Additional information about Telemetry packet on Developer Center
          nullable: true
        locationFrameChannel:
          type: integer
          nullable: true
          description: BLE broadcasting channel used for Kontakt.io Location packet broadcasts
    NewBeaconConfig:
      type: object
      title: New Beacon Configuration
      properties:
        uniqueId:
          description: List of Beacon Unique IDs for which configs should be created
          type: array
          items:
            type: string
        deviceType:
          description: Type of a device that a configuration should be created for
          type: string
          enum:
            - BEACON
        name:
          description: New Bluetooth name
          maxLength: 15
          type: string
        profiles:
          description: List of beacon profiles that should be applied to beacons
          type: string
          enum:
            - IBEACON
            - EDDYSTONE
        packets:
          description: List of Bluetooth advertising packets that beacons should broadcast. Please note that not all types of devices can broadcast all available packets. Additionally, all nRF52-based beacons always broadcast connectable Kontakt.io Secure Profile Packet needed for managing them (it can be disabled only on button-equipped devices).
          type: string
          enum:
            - IBEACON
            - EDDYSTONE_UID
            - EDDYSTONE_URL
            - EDDYSTONE_EID
            - EDDYSTONE_TLM
            - EDDYSTONE_ETLM
            - KONTAKT
            - KONTAKT_TLM
            - KONTAKT_LOCATION
            - BUTTON_IBEACON
        proximity:
          description: New iBeacon Proximity UUID
          type: string
          format: UUID
        major:
          description: New iBeacon Major value
          type: integer
          format: uint16
          minimum: 0
          maximum: 65535
        minor:
          description: New iBeacon Minor value
          type: integer
          format: uint16
          minimum: 0
          maximum: 65535
        namespace:
          description: New Eddystone UID Namespace
          type: string
          maxLength: 20
          minLength: 20
        instanceId:
          description: New Eddystone UID Instance ID
          type: string
          maxLength: 12
          minLength: 12
        url:
          description: New Eddystone URL value
          type: string
        eidIdentityKey:
          description: Eddystone-EID Identity Key
          type: string
        eidRotationPeriodExponent:
          description: The Eddystone-EID rotation period exponent. When the scaler value is *K*, the beacon will generate a new identifier every 2^*K* seconds. Available only for devices with `BEACON_PRO`, `TAG_BEACON`, `CARD_BEACON_2` or `SMART_BEACON_3` model.
          type: string
        shuffled:
          description: Toggle indicating whether Kontakt.io Secure Shuffling should be enabled (`true`) or disabled (`false`)
          type: boolean
        interval:
          description: New beacon advertising interval in milliseconds. Minimum value for nRF51-based devices is `20`, but for nRF52-based devices it is `100`.
          maximum: 10240
          minimum: 20
          type: integer
        kontaktFrameInterval:
          type: integer
          minimum: 20
          maximum: 10240
          description: Advertising interval in milliseconds for Kontakt.io Secure Profile packet
        telemetryInterval:
          type: integer
          minimum: 20
          maximum: 10240
          description: Advertising interval in milliseconds for Kontakt.io Telemetry packet
        locationFrameInterval:
          type: integer
          minimum: 100
          maximum: 10240
          description: Advertising interval in milliseconds for Kontakt.io Location packet
        telemetryFields:
          type: array
          items:
            type: string
            enum:
              - RAW_ACCELEROMETER
              - MOVEMENT_THRESHOLD_EVENT
              - DOUBLE_TAP_EVENT
              - LIGHT_LEVEL
              - TEMPERATURE
              - BATTERY
              - BUTTON_CLICK
              - IDENTIFIED_BUTTON_CLICK
              - UTC_TIME
              - HUMIDITY
              - TEMPERATURE_16_BITS
              - MOVEMENT_EVENT
          description: Content of the Kontakt.io Telemetry packet
          externalDocs:
            url: /hardware/packets/telemetry/
            description: Additional information about Telemetry packet on Developer Center
        locationFrameChannel:
          type: integer
          description: BLE broadcasting channel used for Kontakt.io Location packet broadcasts
        txPower:
          description: New Bluetooth transmission power level. Possible values are integers from 0 to 7 (nRF51-based devices), 1 to 7 (nRF52-based devices), and 1 or 6 (Card Tag CT16-2).
          type: integer
        rssi1m:
          type: array
          description: List of [Calibrated RSSI@1m](https://support.kontakt.io/hc/en-gb/articles/115000115610) (iBeacon) values for a given Device. Each item in this array corresponds to one of the possible TX power levels the given Deivce can broadcast with, starting from the lowest, so it needs to have either 2, 7 or 8 items, depending on beacons that are being configured.
          items:
            type: integer
        rssi0m:
          type: array
          description: List of [Calibrated RSSI@0m](https://support.kontakt.io/hc/en-gb/articles/115000115610) (Eddystone) values for a given Device. Each item in this array corresponds to one of the possible TX power levels the given Deivce can broadcast with, starting from the lowest, so it needs to have either 2, 7 or 8 items, depending on beacons that are being configured.
          items:
            type: integer
        powerSaving:
          description: New Power Saving configuration. Please keep in mind that not all beacons support this feature, and the ones that do have different list of capabilities.
          externalDocs:
            description: Power Saving on Developer Center
            url: /hardware/powersaving
          type: object
          properties:
            features:
              type: array
              minItems: 1
              maxItems: 1
              items:
                type: string
                enum:
                  - LIGHT_SENSOR
                  - RTC
                  - MOTION_DETECTION
                  - BURST_MODE
              description: List of features that can trigger a power saving mode. Only a single value can be provided at a given time. Not all beacons support all available Power Saving modes.
            moveSuspendTimeout:
              type: integer
              minimum: 60
              maximum: 3600
              description: Time (in seconds) after which a Card Tag CT16-2 should engage power saving mode. Possible values are in range between 60 (1 minute) and 3600 (1 hour). Other beacons that also support `MOTION_DETECTION` (nRF52-based) do not have an option to configure this parameter.
            powerSaverAdvertiseInterval:
              type: integer
              minimum: 20
              maximum: 10240
              description: Bluetooth Advertising interval that a Card Tag CT16-2 should use when in the Power Saving mode. Available only on Card Tags CT16-2 with firmware 4.2 or newer.
            rtc:
              description: A list of maximum 7 object representing a single, unique day of a week and hours during that day when a power saving mode should be engaged. Available only on Devices equipped with a Real-Time Clock (RTC).
              type: array
              maxItems: 7
              uniqueItems: true
              items:
                type: object
                properties:
                  day:
                    description: Indicates a day of a week
                    type: string
                    enum:
                      - MON
                      - TUE
                      - WED
                      - THU
                      - FRI
                      - SAT
                      - SUN
                  hours:
                    description: List of hours (in UTC, using 24h clock) from a day specified in the `day` parameter, during which Power Saving should be enabled, e.g. 17 means Power Saving will be enabled from 17:00 until 17:59 UTC.
                    type: array
                    items:
                      type: integer
            lightSensorThreshold:
              type: integer
              minimum: 1
              maximum: 100
              description: Threshold of ambient light intensity, expressed in percents, below which a Device enters the power saving mode. Applicable only to Devices equipped with a light sensor.
            lightSensorHysteresis:
              type: integer
              minimum: 1
              maximum: 100
              description: Light sensor's [hysteresis](https://en.wikipedia.org/wiki/Hysteresis#In_engineering), expressed in percent points. More details in Power Saving guide. Applicable only to Devices equipped with a light sensor.
            burstOnTime:
              type: integer
              minimum: 15
              maximum: 65535
              description: Number of seconds that a beacon should broadcast normally when the `BURST_MODE` Power Saving is enabled
            burstOffTime:
              type: integer
              minimum: 1
              maximum: 10080
              description: Number of minutes that a beacon should be in the sleep mode when the `BURST_MODE` Power Saving is enabled
        accelerometer:
          type: object
          description: New accelerometer configuration
          properties:
            preset:
              type: string
              description: Preset for Accelerometer configuration. Do not set any other `accelerometer` parameters if you're using the `preset`.
              enum:
                - MOVEMENT
                - FREE_FALL
                - DOUBLE_TAP
                - DOUBLE_TAP_AND_MOVEMENT
                - DOUBLE_TAP_AND_FREE_FALL
            features:
              type: array
              description: List of Accelerometer features that should be enabled
              items:
                type: string
                enum:
                  - ACCELEROMETER
                  - X_AXIS
                  - Y_AXIS
                  - Z_AXIS
                  - MOVE_DETECTION
                  - DOUBLE_TAP_DETECTION
            sensitivity:
              description: Accelerometer sensitivity
              type: integer
              enum:
                - 16
                - 32
                - 64
                - 128
            move:
              type: object
              description: Movement detection parameters
              properties:
                threshold:
                  type: integer
                  minimum: 0
                  description: Value (in m*g*) that an acceleration needs to exceeds in order to trigger movement detection
                duration:
                  type: integer
                  minimum: 0
                  maximum: 5080
                  description: Time (in ms) than an acceleration needs to stay above threshold value in order to trigger movement detection
                detectionFlags:
                  type: array
                  items:
                    type: string
                    enum:
                      - X_POSITIVE
                      - X_NEGATIVE
                      - Y_POSITIVE
                      - Y_NEGATIVE
                      - Z_POSITIVE
                      - Z_NEGATIVE
                detectionFlagsJunction:
                  type: string
                  enum:
                    - AND
                    - OR
            doubleTap:
              description: Double tap detection parameters
              type: object
              properties:
                threshold:
                  type: integer
                  minimum: 0
                  description: Value ( in m*g*) that an acceleration needs to exceeds in order to trigger movement detection
                timeLimit:
                  type: integer
                  description: Maximum duration (in ms) of a single tap
                  minimum: 0
                  maximum: 5080
                timeLatency:
                  description: Minimum time gap (in ms) between two taps
                  type: integer
                  minimum: 0
                  maximum: 5080
                timeWindow:
                  description: Maximum duration (in ms) of the whole event
                  type: integer
                  minimum: 0
                  maximum: 5080
                detectionFlags:
                  description: List of accelerometer axes that are monitored for doube tap events
                  type: array
                  items:
                    type: string
                    enum:
                      - X_AXIS
                      - Y_AXIS
                      - Z_AXIS
            highPass:
              type: object
              description: High-pass filter parameters
              properties:
                accelerometerData:
                  description: Flag indicating whether the high-pass fillter should be applied to raw accelerometer data
                  type: boolean
                moveDetection:
                  type: boolean
                  description: Flag indicating whether the high-pass fillter should be applied when movement detection is enabled
                doubleTapDetection:
                  type: boolean
                  description: Flag indicating whether the high-pass fillter should be applied when double tap detection is enabled
                mode:
                  type: string
                  description: High-pass filter mode
                  enum:
                    - NORMAL
                    - NORMAL_RESET
                    - AUTORESET
                    - REFERENCE
                cutOffFrequency:
                  type: number
                  format: float
                  description: High-pass filter cut-off frequency
                  enum:
                    - 0.05
                    - 0.1
                    - 0.2
                    - 0.5
                reference:
                  type: integer
                  description: High-pass filter reference
                  minimum: 0
        temperatureOffset:
          type: integer
          description: Calibration parameter for devices equipped with dedicated thermometer and broadcasting temperature values in `KONTAKT_TLM` packet. This offset does not affect values reported in Eddystone Telemetry packets.
          externalDocs:
            description: Thermometer on Developer Center
            url: /hardware/sensors/#thermometer
        buttonFeatures:
          type: array
          description: New hardware button configuration. Send an empty list if you want to go back to default settings.
          externalDocs:
            description: Beacon Button on Developer Center
            url: /hardware/button/
          items:
            type: string
            enum:
              - CLICK_OFF
              - LONG_PRESS_OFF
        panicDuration:
          type: integer
          minimum: 0
          maximum: 65535
          description: New number of second the `BUTTON_IBEACON` packet should be broadcast after a button press
        password:
          description: New access password
          type: string
    NewGatewayConfig:
      type: object
      title: New Gateway GW16-2 Configuration
      properties:
        uniqueId:
          description: List of Gateway GW16-2 Unique IDs for which configs should be created
          type: array
          items:
            type: string
        deviceType:
          description: Type of a device that a configuration should be created for
          type: string
          enum:
            - GATEWAY
        applications:
          type: object
          description: Configuration for applications running on a Gateway GW16-2
          properties:
            system:
              type: object
              description: Configuration for system-level applications
              properties:
                wifiSsid:
                  type: string
                  description: Name of the WiFi network a Gateway GW16-2 should connect to
                wifiProtocol:
                  type: string
                  description: WiFi authentication protocol that a Gateway GW16-2 should use
                  enum:
                    - WPA_PSK
                    - WPA_EAP
                wifiUserName:
                  type: string
                  description: When `wifiProtocol` is set to `WPA_EAP` this parameter represents PEAP MSCHAPv2 username. If `WPA_PSK` is used, this value will be ignored by a Gateway GW16-2.
    DeviceStatus:
      title: Device Status
      type: object
      properties:
        uniqueId:
          type: string
          description: Beacon Unique ID
        lastEventTimestamp:
          type: integer
          description: Unix epoch time and date of the last update of Beacon Health information
        avgEventInterval:
          type: number
          description: An average time (in seconds) between Beacon Health information updates
        batteryLevel:
          type: integer
          description: Battery level percentage
        master:
          type: string
          description: It was used to indicate a master Cloud Beacon for a given beacon. Preserved for backward compatibility, but since Cloud Beacons are no longer being sold, for most users this value will be `null`.
          nullable: true
          deprecated: true
    DeviceUpdateSecureResponse:
      title: Device Update via Secure Response
      properties:
        uniqueId:
          description: List of Unique IDs of Devices that should be updated
          type: array
          items:
            type: string
        response:
          description: List of Base64-encoded Secure Responses from Kontakt.io devices that were configured. A position on this list corresponds to a position of a Unique ID in the `uniqueId` list.
          type: array
          items:
            type: string
            format: byte
        updated:
          description: List of Unix epoch timestamps that represent a time and date when a Kontakt.io Device were updated. A position on this list corresponds to a position of a Unique ID in the `uniqueId` list.
          type: array
          items:
            type: integer
      required:
        - uniqueId
        - response
        - updated
    DeviceUpdateRaw:
      title: Device Update Virtual Attributes
      properties:
        uniqueId:
          description: List of Unique IDs of Devices that should be updated
          type: array
          items:
            type: string
        alias:
          description: Optional notes for a given Device. Does not affect Device's operation at all, it's purely for Manager's convenience
          type: string
          maxLength: 1024
        tags:
          description: Comma-separated list of maximum 20 Tags (no longer than 32 characters)
          type: array
          maxItems: 20
          uniqueItems: true
          items:
            type: string
            maxLength: 32
        metadata:
          description: Object containing arbitrary key-value pairs. For more information please refer to [Metadata guide](/backend/management/metadata/) on [Kontakt.io Developer Center](https://developer.kontakt.io/).
          type: object
        lat:
          description: Latitude part of the coordiantes in decimal degrees that represent an actual position of a device at the time of an update.
          type: number
          format: float
        lng:
          description: Longitude part of the coordiantes in decimal degrees that represent an actual position of a device at the time of an update.
          type: number
          format: float
        deployedLat:
          description: Latitude part of the coordiantes in decimal degrees that represent a position where the device was originally deployed.
          type: number
          format: float
        deployedLng:
          description: Longitude part of the coordiantes in decimal degrees that represent a position where the device was originally deployed.
          type: number
          format: float
      required:
        - uniqueId
    DwellTime:
      type: object
      title: Location Engine Dwell Time
      properties:
        trackingId:
          description: Identifier of a detected device. If this is a Kontakt.io beacon, this will be its Unique ID. Otherwise Tracking ID will be a MAC address of this device's radio that was detected.
          type: string
        deviceAddress:
          description: MAC address of the detected device's radio
          type: string
        startTimestamp:
          description: Unix epoch timestamp indicating when the device has started dwelling in a particular `proximity` to the detecing Receiver
          type: integer
        endTimestamp:
          description: Unix epoch timestamp indicating when the device has stopped dwelling in a particular `proximity` to the detecing Receiver
          type: integer
        proximity:
          description: Estimated proximity to the Receiver that the detected device was dwelling in
          type: string
          enum:
            - IMMEDIATE
            - NEAR
            - FAR
        scanType:
          description: Information whether the device was detected via Bluetooth or WiFi
          type: string
          enum:
            - BLE
            - WIFI
    DwellTimeItem:
      type: object
      title: Location Engine Dwell Time
      properties:
        sourceId:
          description: ID of a Receiver that has reported the dwelling Item
          type: string
        startTimestamp:
          description: Unix epoch timestamp indicating when the device has started dwelling in a particular `proximity` to the detecing Receiver
          type: integer
        endTimestamp:
          description: Unix epoch timestamp indicating when the device has stopped dwelling in a particular `proximity` to the detecing Receiver
          type: integer
        proximity:
          description: Estimated proximity to the Receiver that the detected device was dwelling in
          type: string
          enum:
            - IMMEDIATE
            - NEAR
            - FAR
    EddystoneDecrypted:
      title: Decrypted Eddystone-TLM packet
      type: object
      properties:
        advertisementCount:
          type: integer
          description: Number of Bluetoth advertising packets broadcasted since the last reboot of a beacon
        batteryVoltage:
          type: number
          description: Battery voltage
        raw:
          type: string
          format: byte
          description: Base64-encoded Eddystone Encrypted Telemetry frame
        temperature:
          type: number
          description: Temperature of a beacon (**not** an ambient temperature, although it might be similar) in °C
        uptime:
          type: integer
          description: Number of seconds since the last reboot of a beacon
    Firmware:
      type: object
      properties:
        id:
          type: string
          format: UUID
          description: Firmware identificator
        name:
          type: string
          description: Firmware name
        description:
          type: string
          description: Optional Firmware description
          nullable: true
        deviceType:
          type: string
          description: Type of a device that the Firmware applies to
          enum:
            - BEACON
            - GATEWAY
        uniqueId:
          type: array
          description: List of Unique IDs of beacons that this Firmware can be applied to
          items:
            type: string
        validVersions:
          description: List of Firmware versions from which it's possible to update to the returned Firmware
          type: string
        scheduled:
          type: boolean
          description: Flag indicating whether an optional firmware should be made availble for upgrading beacons
           (`true`) or not (`false`)
        important:
          type: boolean
          description: Flag indicating whether this Firmware should be considered important (`true`) or just a minor update (`false`)
        optional:
          type: boolean
          description: Flag indicating whether this Firmware is optional (`true`) or not ('false')
        url:
          type: string
          format: URL
          description: Link to a binary file with the Firmware
        fileExtension:
          type: string
          description: Extension of the Firmware file
        crc32:
          type: string
          description: Checksum
    FirmwareCore:
      title: Firmware (Core Parameters)
      properties:
        id:
          type: string
          format: UUID
          description: Firmware identificator
        name:
          type: string
          description: Firmware name
        description:
          type: string
          description: Optional Firmware description
          nullable: true
        deviceType:
          type: string
          description: Type of a device that the Firmware applies to
          enum:
            - BEACON
            - GATEWAY
        validVersions:
          description: List of Firmware versions from which it's possible to update to the returned Firmware
          type: string
        important:
          type: boolean
          description: Flag indicating whether this Firmware should be considered important (`true`) or just a minor update (`false`)
        url:
          type: string
          format: URL
          description: Link to a binary file with the Firmware
    Item:
      properties:
        id:
          type: string
          format: UUID
          description: ID of the Item
        trackingId:
          type: string
          description: ID of a device associated with the Item. In case of Kontakt.io beacons this will be their Unique ID. For other devices Tracking ID will be their MAC address.
        type:
          description: Type of a device representing the Item
          type: string
          enum:
            - KONTAKT_BEACON
            - DEVICE
            - APPLICATION
        category:
          description: General category for the tracked Item
          type: string
          enum:
            - HUMAN
            - PACKAGE
            - OTHER
        properties:
          description: Custom properties of the Item as a list of key-value pairs defined by a Manager. This data is accessible for the filtering query (`q`).
          type: object
          maxProperties: 10
          properties:
            sampleKey1:
              type: string
              description: Both the Key name and the Value defined by a Manager
            sampleKey2:
              description: Both the Key name and the Value defined by a Manager
              type: string
    NewUpdatedItem:
      title: New/Updated Item
      properties:
        trackingId:
          type: string
          description: ID of a device that should be associated with the Item. In case of Kontakt.io beacons this will be their Unique ID. For other devices Tracking ID will be their MAC address.
        type:
          description: Type of a device representing the Item
          type: string
          enum:
            - KONTAKT_BEACON
            - DEVICE
            - APPLICATION
        category:
          description: General category for the tracked Item
          type: string
          enum:
            - HUMAN
            - PACKAGE
            - OTHER
        properties:
          description: Custom properties of the Item as a list of up to 10 key-value pairs.
          type: object
          maxProperties: 10
          properties:
            sampleKey1:
              description: Both Key name and Value are defined by Manager
              type: string
            sampleKey2:
              type: string
              description: Defining them in the API call should look like this `properties.sampleKey2=Value`
    Manager:
      properties:
        id:
          type: string
          format: UUID
        firstName:
          type: string
          description: Manager's first name
        lastName:
          type: string
          description: Manager's last name
        email:
          type: string
          description: Manager's email. There can be only one Manager with the same email.
        supervisorId:
          description: ID of the Manager's Supervisor Manager. If the current Manager is a `SUPERUSER`, this value will be `null`
          type: string
          format: UUID
          nullable: true
        counters:
          type: object
          properties:
            devices:
              type: object
              description: Numbers of various Devices that a Manager has an access to
              properties:
                private:
                  type: integer
                public:
                  type: integer
                shared:
                  type: integer
                sharedWithMe:
                  type: integer
            venues:
              type: object
              description: Numbers of various Venues that a Manager has an access to
              properties:
                private:
                  type: integer
                public:
                  type: integer
                shared:
                  type: integer
                sharedWithMe:
                  type: integer
        uniqueId:
          type: string
          description: Unique ID of a Manager
    Place:
      type: object
      properties:
        id:
          description: ID of the Place
          type: string
          format: UUID
        name:
          description: Name of the Place
          type: string
          format: UUID
        venueId:
          description: ID of a Venue (Loaction) where the Place is located
          type: string
          format: UUID
        parentId:
          description: ID of a Parent Place. `null` if the Place is a Root Place in the Venue (Location).
          nullable: true
          type: string
          format: UUID
        managerId:
          description: ID of a Place's Manager
          type: string
          format: UUID
        receiverIds:
          description: List of Receivers associated with the Place
          type: array
          items:
            description: Receiver ID
            type: string
            format: UUID
        coordinates:
          type: string
        scale:
          description: Scale for schema in px/m (pixels per meter)
          type: number
        schema:
          description: Location of an image representing a floor plan of the Place
          type: string
          format: URL
        schemaType:
          description: MIME type of the `schema`'s image
          type: string
        geoCoordinates:
          type: string
        area:
          type: string
        metadata:
          description: Custom properties defined by a Manager in a key-value format
          type: object
          properties:
            sampleKey1:
              type: string
              description: Both the Key name and the Value defined by a Manager
            sampleKey2:
              description: Both the Key name and the Value defined by a Manager
              type: string
    NewUpdatedPlace:
      title: New/Updated Place
      type: object
      properties:
        name:
          description: Name of the Place
          type: string
          format: UUID
        venueId:
          description: ID of a Venue (Location) that a Place should be associated with
          type: string
          format: UUID
        parentId:
          description: ID of a Parent Place. Required if the Place is not a Root Place for a given Venue (Location).
          type: string
          format: UUID
        coordinates:
          description: Place coordinates
          type: string
        geoCoordinates:
          description: Place geographical coordinates
          type: string
        scale:
          description: Scale for schema in px/m (pixels per meter)
          type: number
        schema:
          type: string
          format: byte
          description: Base64-encoded image representing a floor plan for the Place
        schemaType:
          description: MIME type of the `schema`'s image
          type: string
        area:
          type: string
        metadata:
          type: object
          description: Custom properties defined by a Manager in a key-value format
    Presence:
      type: object
      title: Location Engine Presence
      properties:
        trackingId:
          description: Identifier of a detected device. If this is a Kontakt.io beacon, this will be its Unique ID. Otherwise Tracking ID will be a MAC address of this device's radio that was detected.
          type: string
        deviceAddress:
          description: MAC address of the detected device's radio
          type: string
        timestamp:
          description: Detection time as a Unix epoch timestamp
          type: integer
        proximity:
          description: Estimated proximity to the Receiver that has detected this device
          type: string
          enum:
            - IMMEDIATE
            - NEAR
            - FAR
        rssi:
          description: Strength of the signal coming from the detected device in dBm
          type: integer
        scanType:
          description: Information whether the device was detected via Bluetooth or WiFi
          type: string
          enum:
            - BLE
            - WIFI
        sourceId:
          description: ID of the Receiver that has detected this device
          type: string
    Preset:
      type: object
      properties:
        name:
          type: string
          description: Preset name
        description:
          type: string
          description: Preset description
        proximity:
          type: string
          format: UUID
          nullable: true
          description: iBeacon Proximity UUID
        interval:
          type: integer
          description: Bluetooth advertising interval (in ms)
        txPower:
          type: integer
          description: Transmission power level
    Receiver:
      type: object
      properties:
        id:
          type: string
          format: UUID
          description: ID of the Receiver
        deviceUniqueId:
          description: Unique ID of a device acting as the Receiver
          type: string
        placeId:
          description: ID of a Place where the Receiver is assigned to
          format: UUID
          type: string
        coordinates:
          description: Location of the Receiver in the Place. Dimensions are in meters and use `X:Y:Z` format. Value `0.0:0.0:0.0` represents top-left corner. Currently the `Z` axis is not in use and will always be `0.0`.
          type: string
    NewUpdatedReceiver:
      type: object
      title: New/Updated Receiver
      properties:
        deviceUniqueId:
          description: Unique ID of a device that should act as the Receiver
          type: string
        placeId:
          description: ID of a Place where the Receiver should be assigned to
          format: UUID
          type: string
        coordinates:
          description: Location of the Receiver in the Place. Dimensions are in meters and should be put `X:Y:Z` format. Setting both `X` and `Y` coordinates to `0.0` will result in the Receiver being placed on the top-left corner. Currently the `Z` axis is not in use and its value should always be `0.0`.
          type: string
    Task:
      type: object
      properties:
        uniqueId:
          type: string
          description: Unique ID of a beacon that the Task refers to
        name:
          type: string
          description: Name of the Task
        scheduled:
          type: string
          description: Information when a new Config will be created by the Task. It can be performed either daily, by setting this value to only a time of day using 24 hours clock, e.g. `17:00`, or weekly, by providing both time and comma-separated list of days of the week when a new Config should be scheduled, e.g. `8:00 MON,WED,THU`.
        parameters:
          type: object
          description: Parameters for the new Configuration that should be created for beacons by the Task
          properties:
            proximity:
              type: string
              description: iBeacon Proximity UUID that should be used in the Config. Alternatively this parameter accepts value `random`, that will randomly generate and use a new Proximity UUID.
            major:
              oneOf:
                - type: integer
                  description: iBeacon Minor that should be used in the Config.
                - type: string
                  description: Setting this parameter to `random` will randomly generate and use a new Minor value in the Config.
                  enum:
                    - random
            minor:
              oneOf:
                - type: integer
                  description: iBeacon Minor that should be used in the Config.
                - type: string
                  description: Setting this parameter to `random` will randomly generate and use a new Minor value in the Config.
                  enum:
                    - random
            txPower:
              type: integer
              description: Bluetooth transmission power level
            interval:
              type: number
              description: New beacon advertising interval in milliseconds. Minimum value for nRF51-based devices is `20`, but for nRF52-based devices it is `100`.
              maximum: 10240
              minimum: 20
    Trigger:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: ID of the Trigger
        name:
          type: string
          description: Name of the Trigger
        type:
          type: string
          description: An event that causes the trigger to be fired.
          enum:
            - BEACON_DETECTED
            - BEACON_LOST
        executor:
          type: string
          description: Defines where a Trigger should be processed. This also affects which element of the platform makes the HTTP requests from the Activities associated with the Trigger.
          enum:
            - CLOUD
            - GATEWAY
        activityId:
          type: array
          description: List of Activities that should be fired when the Trigger conditions are fulfilled.
          items:
            type: string
            format: uuid
        throttle:
          type: integer
          description: Minimal number of seconds between two subsequent firings of the Trigger.
          minimum: 1
          maximum: 86400
          default: 30
        context:
          type: object
          description: Trigger conditions. Actual number of the properties in a given response may vary depending on Trigger's configuration.
          properties:
            trackingId:
              type: string
              description: Either an Unique ID of a Kontakt.io beacon or a MAC address of a device that is monitored for the Trigger.
            proximityUUID:
              type: string
              description: iBeacon Proximity UUID that is monitored for the Trigger.
              format: uuid
            major:
              type: integer
              description: iBeacon Major that is monitored for the new Trigger.
              minimum: 0
              maximum: 65535
            minor:
              type: integer
              description: iBeacon Minor that is monitored for the new Trigger.
              minimum: 0
              maximum: 65535
            namespace:
              type: string
              description: Eddystone Namespace that is monitored for the new Trigger.
            instanceId:
              type: string
              description: Eddystone Instance ID that is monitored for the new Trigger.
            proximity:
              type: string
              description: Proximity in which the Trigger should be fired.
              enum:
                - IMMEDIATE
                - NEAR
                - FAR
                - UNKNOWN
            sourceId:
              type: string
              description: ID of a Gateway GW16-2 that should fire the Trigger if the `executor` is set to `GATEWAY`.
    NewUpdatedTrigger:
      type: object
      title: New/Updated Trigger
      properties:
        name:
          type: string
          description: Name of the Trigger
        type:
          type: string
          description: An event that causes the trigger to be fired.
          enum:
            - BEACON_DETECTED
            - BEACON_LOST
        executor:
          type: string
          description: Defines where a Trigger should be processed. This also affects which element of the platform makes the HTTP requests from the Activities associated with the Trigger.
          enum:
            - CLOUD
            - GATEWAY
        activityId:
          type: array
          description: List of Activities that should be fired when the Trigger conditions are fulfilled.
          items:
            type: string
            format: uuid
        throttle:
          type: integer
          description: Minimal number of seconds between two subsequent firings of the Trigger. If not set the default value of `30` is used.
          minimum: 1
          maximum: 86400
          default: 30
        context:
          type: object
          description: Trigger conditions
          properties:
            trackingId:
              type: string
              description: Either an Unique ID of a Kontakt.io beacon or a MAC address of a device that is monitored for the Trigger.
            proximityUUID:
              type: string
              description: iBeacon Proximity UUID that is monitored for the Trigger.
              format: uuid
            major:
              type: integer
              description: iBeacon Major that is monitored for the new Trigger.
              minimum: 0
              maximum: 65535
            minor:
              type: integer
              description: iBeacon Minor that is monitored for the new Trigger.
              minimum: 0
              maximum: 65535
            namespace:
              type: string
              description: Eddystone Namespace that is monitored for the new Trigger.
            instanceId:
              type: string
              description: Eddystone Instance ID that is monitored for the new Trigger.
            proximity:
              type: string
              description: Proximity in which the Trigger should be fired.
              enum:
                - IMMEDIATE
                - NEAR
                - FAR
                - UNKNOWN
            sourceId:
              type: string
              description: ID of a Gateway GW16-2 that should fire the Trigger. Required only if the `executor` is set to `GATEWAY`.
    Venue:
      allOf:
        - $ref: '#/components/schemas/VenueEmbedded'
        - type: object
          properties:
            managerId:
              type: string
              format: UUID
              description: ID of the Venue's Manager
    VenueEmbedded:
      title: Venue (Location)
      description: Venue (Location) where the Device is assigned to
      type: object
      properties:
        id:
          type: string
          format: UUID
          description: ID of the Venue (Location)
        name:
          type: string
          description: Name of the Venue (Location)
        description:
          description: Optional description for a Venue (Location)
          type: string
        devicesCount:
          description: Number of Devices assigned to the Venue (Location)
          type: integer
        access:
          description: Type of access that a Manager, whose API Key was used, has to the Venue (Location)
          type: string
          enum:
            - OWNER
            - SUPERVISOR
        shares:
          type: array
          items:
            type: object
            properties:
              managerMail:
                type: string
                format: email
                description: Email of a Manager that a Venue (Locations) is shared with
              access:
                type: string
                enum:
                  - VIEWER
                  - EDITOR
                description: Type of access that a Manager has to a Venue (Location)
              expirationDate:
                description: Unix epoch timestamp with an optional date when the access to a Venue (Location) will be revoked. If not specified (`null`) then a Venue will be share indefinitely.
                type: integer
        coverType:
          description: MIME type of the Venue's cover image. Web Panel currently does neither display nor allow to create Venues (Locations) with a cover image, but since there still might be some Venues (Locations) created in old versions of the Web Panel, this property is still present.
          type: string
          nullable: true
          deprecated: true
        image:
          type: string
          format: URL
          description: Link to the actual cover image. Web Panel currently does neither display nor allow to create Venues (Locations) with a cover image, but since there still might be some Venues (Locations) created in old versions of the Web Panel, this property is still present.
          nullable: true
          deprecated: true
        metadata:
          type: object
          description: Object containing arbitrary key-value pairs that can be defined by a Device's Manager
          nullable: true
        lat:
          type: number
          format: float
          description: Latitude of a place where the Venue is located
          nullable: true
        lng:
          type: number
          format: float
          description: Longitude of a place where the Venue is located
          nullable: true
    NewUpdatedVenue:
      type: object
      properties:
        name:
          description: Venue name
          type: string
        description:
          description: Venue description
          type: string
        lat:
          description: Latitude
          type: number
          format: float
        lng:
          description: Longitude
          type: number
          format: float
        metadata:
          description: Custom data attached to a Venue in a key-value format
          type: object
          properties:
            customKey1:
              type: string
            customKey2:
              type: string
        file:
          description: Cover image for a Venue
          type: string
          format: base64
          deprecated: true
    SearchMeta:
      type: object
      title: Search Metadata
      description: Additional information, pagination and metadata about an API response
      externalDocs:
          description: Pagination model description
          url: /backend/management/pagination/
      properties:
        filter:
          type: string
          description: Filter query used in the API call
        startIndex:
          type: integer
          description: Start index for the results array
        maxResult:
          type: integer
          description: Maximum numbers of results in a single response
        prevResults:
          type: string
          description: URL for the previous page of results
          format: URL
        count:
          type: integer
          nullable: true
          description: Number of results. Not `null` only when the `queryType` is set to `COUNTED` or `SEARCH_META`.
        orderBy:
          type: string
          enum:
            - CREATED
        nextResults:
          type: string
          format: URL
          description: URL for the next page of results
        queryType:
          description: Query type. `COUNTED` - returns a number of results in the `count` field. `SEARCH_META` - returns only the `searchMeta` object, but with a number of results in the `count` field.
          type: string
          enum:
            - NORMAL
            - COUNTED
            - SEARCH_META
          default: NORMAL
        order:
          type: string
          description: Sorting order - `ASC`ending (default) or `DESC`ending
          enum:
            - ASC
            - DESC
          default: ASC
    LESearchMeta:
      title: Location Engine Search Metadata
      allOf:
        - $ref: '#/components/schemas/LESearchMetaSource'
        - $ref: '#/components/schemas/LESearchMetaCore'
    LESearchMetaSource:
      oneOf:
        - type: object
          properties:
            sourceIds:
              description: List of Source IDs that were used in the API call 
              type: array
              items:
                type: string
        - type: object
          properties:
            placeId:
              description: Place ID that was used in the API call
              type: string
              format: UUID
    LESearchMetaCore:
      properties:
        filter:
          description: Filter query used in the API call
          type: string
        trackingIds:
          description: List of Tracking IDs specified in the API call
          type: array
          items:
            type: string
        startIndex:
          description: Start index for the results array
          type: integer
        maxResult:
          description: Maximum numbers of results in a single response
          type: integer
        prevResults:
          description: URL for the previous page of results
          type: string
          format: URL
        nextResults:
          description: URL for the next page of results
          type: string
          format: URL
        startTimestamp:
          description: Start time for analytics defined in the API call
          oneOf:
            - type: string
              format: date-time
            - type: integer
        endTimestamp:
          description: End time for analytics defined in the API call
          oneOf:
            - type: string
              format: date-time
            - type: integer
        interval:
          type: string
          description: Data aggregation interval specified in the API call
          enum:
            - S10
            - M1
            - M15
            - H1
    Device:
      type: object
      discriminator:
        propertyName: model
        mapping:
          SMART_BEACON: '#/components/schemas/SmartBeacon'
          USB_BEACON: '#/components/schemas/UsbBeacon'
          BEACON_PRO: '#/components/schemas/BeaconPro'
          CARD_BEACON: '#/components/schemas/CardBeacon'
          TAG_BEACON: '#/components/schemas/TagBeacon'
          HEAVY_DUTY_BEACON: '#/components/schemas/HDBeacon'
          CARD_BEACON_2: '#/components/schemas/CardBeacon2'
          GATEWAY: '#/components/schemas/Gateway'
          TOUGH_BEACON_2: '#/components/schemas/ToughBeacon2'
          BRACELET_TAG: '#/components/schemas/BraceletTag'
          SMART_BEACON_3: '#/components/schemas/SmartBeacon3'
      properties:
        id:
          type: string
          format: UUID
          description: Device object ID used internally in Kontakt.io API
        uniqueId:
          type: string
          description: Unique ID of the Device
        alias:
          type: string
          nullable: true
          description: Alternative description for the Device, stored only on Kontakt.io backend - it's not possible to read this value via Bluetooth directly from the Device itself. In Kontakt.io Web Panel repesented as a Note.
        tags:
          type: array
          description: List of custom tags, defined and editable by Device's Manager
          items:
            type: string
        deviceType:
          type: string
          enum:
            - BEACON
            - GATEWAY
            - EXTERNAL
          description: General Type of the Device
        model:
          type: string
          enum:
            - SMART_BEACON
            - USB_BEACON
            - BEACON_PRO
            - CARD_BEACON
            - TAG_BEACON
            - HEAVY_DUTY_BEACON
            - CARD_BEACON_2
            - TOUGH_BEACON_2
            - BRACELET_TAG
            - SMART_BEACON_3
            - GATEWAY
          description: Kontakt.io internal model name of the Device. For differentiating various device types please use `product` instead.
        product:
          type: string
          description: Official name of the Device model
        specification:
          type: string
          enum:
            - STANDARD
            - TOUGH
          description: Specification for the Device. It is used internally to differentiate between devices using the same internal hardware, but e.g. having a different casing, like Smart Beacon SB16-2 (`model` is `SMART_BEACON` and `specification` is `STANDARD`) and Tough Beacon TB15-1 (`model` is `SMART_BEACON` and `specification` is `TOUGH`). Most of Devices use `STANDARD`. This parameter is used only for Kontakt.io internal purposes. Users of the API should consider relying on `product` names instead. 
        managerId:
          type: string
          format: UUID
          description: ID of the Device's Manager
        ownerId:
          type: string
          format: UUID
          description: ID of the Device's Owner. If a Device was assigned to its current Manager by a Superviser or shared with the Manager, this property will indicate a Manager that is an actual owner of this particular Device.
        access:
          type: string
          enum:
            - OWNER
            - SUPERVISOR
            - EDITOR
            - VIEWER
          description: Type of access that a Manager, whose API Key was used, has to the Device
        venue:
          type: object
          nullable: true
          description: Venue (Location) where the Device is assigned to
          $ref: '#/components/schemas/VenueEmbedded'
        shares:
          description: List of Share objects describing how and with whom the Device has been shared
          type: array
          items:
            type: object
            properties:
              managerMail:
                type: string
                format: email
                description: Email address of a Manager that received access to this Device
              access:
                type: string
                enum:
                  - OWNER
                  - SUPERVISOR
                  - EDITOR
                  - VIEWER
                description: Type of access granted to this Device
              expirationDate:
                type: integer
                nullable: true
                description: Unix epoch timestamp indicating when a share will be revoked. If a Device was shared indefiniately, this value will be `null`.
        firmware:
          type: string
          description: Firmware version of the Device
        metadata:
          type: object
          nullable: true
          description: Object containing arbitrary key-value pairs that can be defined by a Device's Manager
        lat:
          type: number
          format: float
          nullable: true
          description: Latitude of a place where the Device has been detected the last time. Can be set manually or automatically, e.g. in Kontakt.io Administration Apps.
        lng:
          type: number
          format: float
          nullable: true
          description: Longitude of a place where the Device has been detected the last time. Can be set manually or automatically, e.g. in Kontakt.io Administration Apps.
        deployedlat:
          type: number
          format: float
          nullable: true
          description: Latitude of a place where the Device should be installed. Can be set by placing a Device in a Location in Kontakt.io Panel.
        deployedlng:
          type: number
          format: float
          nullable: true
          description: Longitude of a place where the Device should be installed. Can be set by placing a Device in a Location in Kontakt.io Panel.
        orderId:
          type: string
          description: ID of an Order from which the Device came from
    BeaconDeviceCore:
      description: Common components for beacons
      type: object
      properties:
        name:
          type: string
          maxLength: 15
          description: Bluetooth name of the Device
        mac:
          type: string
          description: MAC address of the Device's Bluetooth radio. Value will be empty for devices shipped before April 2016. Please note that some devices, e.g. Beacon Pro BP16-3, broadcast different Bluetooth Advertising Packets with different MAC addresses. In this case the `mac` property will refer to a MAC address used for broadcasting connectable Kontakt.io Secure Profile packet. More information available in [this article](https://support.kontakt.io/hc/en-gb/articles/206547204).
        profiles:
          description: List of beacon profiles in use by the Device.
          type: array
          items:
            type: string
            enum:
              - IBEACON
              - EDDYSTONE
        packets:
          description: Beacon advertising packets broadcasted by a device
          type: array
          items:
            type: string
            enum:
              - KONTAKT
              - KONTAKT_TLM
              - KONTAKT_LOCATION
              - IBEACON
              - EDDYSTONE_UID
              - EDDYSTONE_URL
              - EDDYSTONE_TLM
              - EDDYSTONE_EID
              - EDDYSTONE_ETLM
              - BUTTON_IBEACON
        proximity:
          type: string
          format: UUID
          description: Proximity UUID broadcasted in iBeacon packet
        major:
          type: integer
          minimum: 0
          maximum: 65535
          description: Major value broadcasted in iBeacon packet
        minor:
          type: integer
          minimum: 0
          maximum: 65535
          description: Minor value broadcasted in iBeacon packet
        namespace:
          type: string
          description: Namespace value broadcasted in [Eddystone-UID packet](https://github.com/google/eddystone/tree/master/eddystone-uid)
        instanceId:
          type: string
          description: Instance ID value broadcasted in [Eddystone-UID packet](https://github.com/google/eddystone/tree/master/eddystone-uid)
        url:
          type: string
          description: Hex encoded URL broadcasted in Eddystone-URL packet
          externalDocs:
            url: https://github.com/google/eddystone/tree/master/eddystone-url#url-scheme-prefix
            description: More information about Eddystone-URL encoding scheme
        shuffled:
          type: boolean
          description: Flag indicating whether the device has Kontakt.io Secure Shuffling turned on (`true`) or off (`false`)
        secureProximity:
          type: string
          format: UUID
          description: Secure Proximity UUID broadcasted in Secured iBeacon packet
        secureNamespace:
          type: string
          description: Secure Namespace value broadcasted in Secured Eddystone-UID packet
        futureId:
          type: object
          description: Object containing two lists with 8 Future IDs objects each. These Future IDs represent most probable shuffled identifiers this Device might broadcast in next few days.
          properties:
            IBEACON:
              type: array
              description: Shuffled iBeacon identifiers
              items:
                type: object
                properties:
                  proximity:
                    type: string
                    format: UUID
                    description: Secure Proximity UUID broadcasted in a shuffled iBeacon packet
                  major:
                    type: integer
                    minimum: 0
                    maximum: 65535
                    description: Secure Major value broadcasted in shuffled iBeacon packet
                  minor:
                    type: integer
                    minimum: 0
                    maximum: 65535
                    description: Secure Minor value broadcasted in shuffled iBeacon packet
            EDDYSTONE:
              type: array
              description: Shuffled Eddystone-UID identifiers
              items:
                type: object
                properties:
                  namespace:
                    type: string
                    description: Secure Namespace value broadcasted in shuffled [Eddystone-UID packet](https://github.com/google/eddystone/tree/master/eddystone-uid)
                  instanceId:
                    type: string
                    description: Secure Instance ID value broadcasted in shuffled [Eddystone-UID packet](https://github.com/google/eddystone/tree/master/eddystone-uid)
        rssi1m:
          description: A list of [Calibrated RSSI@1m](https://support.kontakt.io/hc/en-gb/articles/115000115610) (iBeacon) values for a given Device. Each item in this array corresponds to one of the possible TX power levels the given Deivce can broadcast with, starting from the lowest.
          type: array
          items:
            type: integer
            maximum: 0
        rssi0m:
          description: A list of [Calibrated RSSI@0m](https://support.kontakt.io/hc/en-gb/articles/115000115610) (Eddystone) values for a given Device. Each item in this array corresponds to one of the possible TX power levels the given Deivce can broadcast with, starting from the lowest.
          type: array
          items:
            type: integer
            maximum: 0
        customConfiguration:
          type: object
          nullable: true
          description: Custom configuration parameters for special use-cases. If the solution prepared for you by Kontakt.io takes advantage of these properties, please get in touch with our Support Team for documentation.
        actionsCount:
          type: integer
          default: 0
          description: Number of Actions created for the Device
          deprecated: true
        lastSeen:
          type: integer
          nullable: true
          description: Unix timestamp of a moment when a device was last detected by a Gateway or a smartphone with a running Kontakt.io Administration app
        batteryLevel:
          type: integer
          nullable: true
          description: Battery level percentage
    Accelerometer:
      properties:
        accelerometer:
          type: object
          description: Accelerometer configuration
          properties:
            features:
              description: List of Accelerometer features that are enabled
              type: array
              items:
                type: string
                enum:
                  - ACCELEROMETER
                  - X_AXIS
                  - Y_AXIS
                  - Z_AXIS
                  - MOVE_DETECTION
                  - DOUBLE_TAP_DETECTION
            sensitivity:
              description: Accelerometer sensitivity
              type: integer
              enum:
                - 16
                - 32
                - 64
                - 128
            preset:
              description: Preset for Accelerometer configuration
              type: string
              enum:
                - MOVEMENT
                - FREE_FALL
                - DOUBLE_TAP
                - DOUBLE_TAP_AND_MOVEMENT
                - DOUBLE_TAP_AND_FREE_FALL
            move:
              description: Movement detection parameters
              type: object
              properties:
                threshold:
                  description: Value (in m*g*) that an acceleration needs to exceeds in order to trigger movement detection
                  type: integer
                duration:
                  description: Time (in ms) than an acceleration needs to stay above threshold value in order to trigger movement detection
                  type: integer
                detectionFlags:
                  type: array
                  items:
                    type: string
                    enum:
                      - X_POSITIVE
                      - Y_POSITIVE
                      - Z_POSITIVE
                      - X_NEGATIVE
                      - Y_NEGATIVE
                      - Z_NEGATIVE
                detectionFlagsJunction:
                  type: string
                  enum:
                    - AND
                    - OR
            doubleTap:
              description: Double tap detection parameters
              type: object
              properties:
                threshold:
                  description: Value ( in m*g*) that an acceleration needs to exceeds in order to trigger movement detection
                  type: integer
                timeLimit:
                  description: Maximum duration (in ms) of a single tap
                  type: integer
                timeLatency:
                  description: Minimum time gap (in ms) between two taps
                  type: integer
                timeWindow:
                  description: Maximum duration (in ms) of the whole event
                  type: integer
                detectionFlags:
                  description: List of accelerometer axes that are monitored for doube tap events
                  type: array
                  items:
                    type: string
                    enum:
                      - X_AXIS
                      - Y_AXIS
                      - Z_AXIS
            highPass:
              description: High-pass filter parameters
              type: object
              properties:
                accelerometerData:
                  type: boolean
                  description: Flag indicating whether the high-pass fillter should be applied to raw accelerometer data
                moveDetection:
                  type: boolean
                  description: Flag indicating whether the high-pass fillter should be applied when movement detection is enabled
                doubleTapDetection:
                  type: boolean
                  description: Flag indicating whether the high-pass fillter should be applied when double tap detection is enabled
                mode:
                  description: High-pass filter mode
                  type: string
                  enum:
                    - NORMAL
                    - NORMAL_RESET
                    - AUTORESET
                    - REFERENCE
                cutOffFrequency:
                  description: High-pass filter cut-off frequency
                  type: number
                  enum:
                    - 0.05
                    - 0.1
                    - 0.2
                    - 0.5
                reference:
                  description: High-pass filter reference
                  type: integer
    PowerSaving:
      properties:
        powerSaving:
          description: Power Saving configuration
          externalDocs:
            url: /hardware/powersaving/
            description: Power Saving on Developer Center
          type: object
          properties:
            features:
              type: array
              items:
                type: string
                enum:
                  - LIGHT_SENSOR
                  - RTC
                  - MOTION_DETECTION
                  - BURST_MODE
              description: Currently enabled power saving mode. Possible values are `LIGHT_SENSOR` (Beacon Pro BP16-3 only) and `MOTION_DETECTION`, `RTC`, `BURST_MODE` or an empty list.
            moveSuspendTimeout:
              nullable: true
              type: integer
              minimum: 60
              maximum: 3600
              description: Time (in seconds) after which a Card Tag CT16-2 engages power saving mode. Possible values are in range between 60 (1 minute) and 3600 (1 hour).
            powerSaverAdvertiseInterval:
              nullable: true
              type: integer
              description: Bluetooth Advertising interval that a Card Tag CT16-2 should use when in the Power Saving mode. Available only on Card Tags CT16-2 with firmware 4.2 or newer.
            rtc:
              nullable: true
              description: A list of object representing days of a week and hours during that day when a power saving mode should be engaged. Available only on Devices equipped with a Real-Time Clock (RTC).
              type: array
              items:
                type: object
                properties:
                  day:
                    type: string
                    enum:
                      - MON
                      - TUE
                      - WED
                      - THU
                      - FRI
                      - SAT
                      - SUN
                    description: Indicates a day of a week.
                  hours:
                    type: array
                    items:
                      type: integer
                      minimum: 0
                      maximum: 23
                    description: List of hours (in UTC, using 24h clock) from a day specified in the `day` parameter, during which Power Saving should be enabled, e.g. 17 means Power Saving will be enabled from 17:00 until 17:59 UTC.
            lightSensorThreshold:
              nullable: true
              type: integer
              minimum: 0
              maximum: 100
              description: Threshold of ambient light intensity, expressed in percents, below which a Device enters the power saving mode. Applicable only to Devices equipped with a light sensor.
            lightSensorHysteresis:
              nullable: true
              type: integer
              description: Light sensor's [hysteresis](https://en.wikipedia.org/wiki/Hysteresis#In_engineering), expressed in percent points. More details in Power Saving guide. Applicable only to Devices equipped with a light sensor.
            burstOnTime:
              nullable: true
              type: integer
              minimum: 15
              maximum: 65535
              description: Number of *seconds* a beacon should broadcast when `BURST_MODE` is active
            burstOffTime:
              nullable: true
              type: integer
              minimum: 1
              maximum: 10080
              description: Number of *minutes* between each broadcasts when `BURST_MODE` is active
    Button:
      type: object
      properties:
        buttonFeatures:
          type: array
          items:
            type: string
            enum:
              - CLICK_OFF
              - LONG_PRESS_OFF
          description: Hardware button configuration
          externalDocs:
            url: /hardware/button/
            description: Beacon button on Developer Center
        panicDuration:
          description: Number of seconds the `BUTTON_IBEACON` packet is broadcasted after a single button click
          type: integer
          minimum: 0
          maximum: 65535
    EID:
      properties:
        eidInitialTimestamp:
          type: string
          description: Eddystone-EID Initial Timestamp
        eidRotationPeriodExponent:
          type: integer
          description: The Eddystone-EID rotation period exponent. When the scaler value is *K*, a beacon generates a new identifier every 2^*K* seconds.
    nRF52Common:
      properties:
        txPower:
          type: integer
          minimum: 1
          maximum: 7
          description: Bluetooth transmission power level
        interval:
          type: integer
          minimum: 100
          maximum: 10240
          description: Advertising interval in milliseconds for iBeacon and Eddystone packets
        kontaktFrameInterval:
          type: integer
          minimum: 20
          maximum: 10240
          description: Advertising interval in milliseconds for Kontakt.io Secure Profile packet
        telemetryInterval:
          type: integer
          nullable: true
          minimum: 20
          maximum: 10240
          description: Advertising interval in milliseconds for Kontakt.io Telemetry packet
        locationFrameInterval:
          type: integer
          nullable: true
          minimum: 100
          maximum: 10240
          description: Advertising interval in milliseconds for Kontakt.io Location packet
        locationFrameChannel:
          type: integer
          nullable: true
          description: BLE broadcasting channel used for Kontakt.io Location packet broadcasts
    SmartBeacon:
      description: A representation of a Smart Beacon SB16-2
      allOf:
        - $ref: '#/components/schemas/Device'
        - $ref: '#/components/schemas/BeaconDeviceCore'
        - type: object
          properties:
            txPower:
              type: integer
              minimum: 0
              maximum: 7
              description: Bluetooth transmission power level
            interval:
              type: number
              minimum: 20
              maximum: 10240
              description: Beacon advertising interval in milliseconds
    UsbBeacon:
      description: A representation of a USB Beacon UB16-2
      allOf:
        - $ref: '#/components/schemas/Device'
        - $ref: '#/components/schemas/BeaconDeviceCore'
        - type: object
          properties:
            txPower:
              type: integer
              minimum: 0
              maximum: 7
              description: Bluetooth transmission power level
            interval:
              type: number
              minimum: 20
              maximum: 10240
              description: Beacon advertising interval in milliseconds
    BeaconPro:
      description: A representation of a Beacon Pro BP16-3
      allOf:
        - $ref: '#/components/schemas/Device'
        - $ref: '#/components/schemas/BeaconDeviceCore'
        - $ref: '#/components/schemas/nRF52Common'
        - $ref: '#/components/schemas/Accelerometer'
        - $ref: '#/components/schemas/PowerSaving'
        - $ref: '#/components/schemas/EID'
    TagBeacon:
      description: A representation of an Asset Tag S18-3
      allOf:
        - $ref: '#/components/schemas/Device'
        - $ref: '#/components/schemas/BeaconDeviceCore'
        - $ref: '#/components/schemas/nRF52Common'
        - $ref: '#/components/schemas/Accelerometer'
        - $ref: '#/components/schemas/PowerSaving'
        - $ref: '#/components/schemas/Button'
        - $ref: '#/components/schemas/EID'
    HDBeacon:
      description: A representation of a Heavy Duty Beacon HD18-3
      allOf:
        - $ref: '#/components/schemas/Device'
        - $ref: '#/components/schemas/BeaconDeviceCore'
        - $ref: '#/components/schemas/nRF52Common'
        - $ref: '#/components/schemas/Accelerometer'
        - $ref: '#/components/schemas/PowerSaving'
        - $ref: '#/components/schemas/EID'
    CardBeacon:
      description: A representation of a Card Tag CT16-2
      allOf:
        - $ref: '#/components/schemas/Device'
        - $ref: '#/components/schemas/BeaconDeviceCore'
        - type: object
          properties:
            txPower:
              type: integer
              description: Bluetooth transmission power level
              enum:
                - 1
                - 6
            interval:
              type: number
              minimum: 20
              maximum: 10240
              description: Beacon advertising interval in milliseconds
        - $ref: '#/components/schemas/PowerSaving'
    CardBeacon2:
      description: A representation of a Card Tag CT18-3
      allOf:
        - $ref: '#/components/schemas/Device'
        - $ref: '#/components/schemas/BeaconDeviceCore'
        - $ref: '#/components/schemas/nRF52Common'
        - $ref: '#/components/schemas/Accelerometer'
        - $ref: '#/components/schemas/PowerSaving'
        - $ref: '#/components/schemas/Button'
        - $ref: '#/components/schemas/EID'
    SmartBeacon3:
      description: A representation of a Smart Beacon SB18-3
      allOf:
        - $ref: '#/components/schemas/Device'
        - $ref: '#/components/schemas/BeaconDeviceCore'
        - $ref: '#/components/schemas/nRF52Common'
        - $ref: '#/components/schemas/Accelerometer'
        - $ref: '#/components/schemas/PowerSaving'
        - $ref: '#/components/schemas/EID'
    ToughBeacon2:
      description: A representation of a Tough Beacon TB18-2
      allOf:
        - $ref: '#/components/schemas/Device'
        - $ref: '#/components/schemas/BeaconDeviceCore'
        - $ref: '#/components/schemas/nRF52Common'
        - $ref: '#/components/schemas/Accelerometer'
        - $ref: '#/components/schemas/PowerSaving'
        - $ref: '#/components/schemas/EID'
    BraceletTag:
      description: A representation of a Bracelet Tag BT18-3
      allOf:
        - $ref: '#/components/schemas/Device'
        - $ref: '#/components/schemas/BeaconDeviceCore'
        - $ref: '#/components/schemas/nRF52Common'
        - $ref: '#/components/schemas/Accelerometer'
        - $ref: '#/components/schemas/PowerSaving'
        - $ref: '#/components/schemas/Button'
        - $ref: '#/components/schemas/EID'
    Gateway:
      description: A representation of a Gateway GW16-2
      allOf:
        - $ref: '#/components/schemas/Device'
        - type: object
          properties:
            subscriptionPlans:
              type: array
              items:
                type: string
                enum:
                  - LOCATION_ENGINE
            applications:
              description: Configuration parameters of various elements of a Kontakt.io Gateway GW16-2
              type: object
              properties:
                system:
                  description: System settings
                  type: object
                  properties:
                    wifiSsid:
                      type: string
                      description: Name of a WiFi network that Gateway GW16-2 will try to connect to
                    wifiProtocol:
                      type: string
                      enum:
                        - WPA_PSK
                        - WPA_EAP
                      description: Type of an WiFi authentication schema
                    wifiUserName:
                      type: string
                      description: WiFi username for the WPA(2) Enterprise authentication scheme. If the WPA(2) Personal scheme is used instead, the value of this parameter is set to `uninitialized`.
                      default: uninitialized
                ble-scanner:
                  description: BLE scanner configuration
                  type: object
                  properties:
                    lostPeriod:
                      type: integer
    External:
      description: A representation of a 3rd party device
      type: object
      properties:
        id:
          type: string
          format: UUID
          description: Device object ID used internally in Kontakt.io API
        uniqueId:
          type: string
          description: MAC address of the registered device
        vendor:
          type: string
          enum:
            - CASSIA
            - MERAKI
            - RUCKUS
        alias:
          type: string
          nullable: true
          description: Alternative description for the Device, stored only on Kontakt.io backend - it's not possible to read this value via Bluetooth directly from the Device itself. In Kontakt.io Panel repesented as a Note.
        tags:
          type: array
          description: List of custom tags, defined and editable by Device's Manager
          items:
            type: string
        deviceType:
          type: string
          enum:
            - EXTERNAL
          description: Type of the Device
        managerId:
          type: string
          format: UUID
          description: ID of the Device's Manager
        ownerId:
          type: string
          format: UUID
          description: ID of the Device's Owner. If a Device was assigned to its current Manager by a Superviser or shared with the Manager, this property will indicate a Manager that is an actual owner of this particular Device.
        access:
          type: string
          enum:
            - OWNER
            - SUPERVISOR
            - EDITOR
            - VIEWER
          description: Type of access that a Manager, whose API Key was used, has to the Device
        venue:
          type: object
          nullable: true
          description: Venue (Location) where the Device is assigned to
          $ref: '#/components/schemas/VenueEmbedded'
        shares:
          description: List of Share objects describing how and with whom the Device has been shared
          type: array
          items:
            type: object
            properties:
              managerMail:
                type: string
                format: email
                description: Email address of a Manager that received access to this Device
              access:
                type: string
                enum:
                  - OWNER
                  - SUPERVISOR
                  - EDITOR
                  - VIEWER
                description: Type of access granted to this Device
              expirationDate:
                type: integer
                nullable: true
                description: Unix epoch timestamp indicating when a share will be revoked. If a Device was shared indefiniately, this value will be `null`.
        metadata:
          type: object
          nullable: true
          description: Object containing arbitrary key-value pairs that can be defined by a Device's Manager
        properties:
          type: object
          nullable: true
          description: Object containing arbitrary key-value pairs that can be defined by a Device's Manager
        lat:
          type: number
          nullable: true
          description: Latitude of a place where the Device has been detected the last time. Can be set manually or automatically, e.g. in Kontakt.io Administration Apps.
        lng:
          type: number
          nullable: true
          description: Longitude of a place where the Device has been detected the last time. Can be set manually or automatically, e.g. in Kontakt.io Administration Apps.
        deployedlat:
          type: number
          nullable: true
          description: Latitude of a place where the Device should be installed. Can be set by placing a Device in a Location in Kontakt.io Panel.
        deployedlng:
          type: number
          nullable: true
          description: Longitude of a place where the Device should be installed. Can be set by placing a Device in a Location in Kontakt.io Panel.
        queriedBy:
          type: string
          nullable: true